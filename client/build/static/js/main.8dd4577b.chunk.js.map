{"version":3,"sources":["components/content/main/welcome/Welcome.module.css","components/content/main/metod/Metod.module.css","components/header/nav/logout/Logout.module.css","components/footer/three/FooterNav.module.css","components/content/Content.module.css","components/content/polls/Polls.module.css","components/content/polls/PoolLink.module.css","components/admin/add-interviewers/polls/SelectPoll.module.css","components/content/profile/profile/Profile.module.css","components/header/nav/logout/Logout.tsx","store/user-reducer.ts","components/header/nav/logout/Logout.container.tsx","components/header/nav/admin-nav/AdminNav.tsx","components/header/nav/admin-nav/AdminNav.container.tsx","components/header/nav/collapse/AdminCollapse.tsx","components/header/nav/collapse/AdminCollapse.container.tsx","components/header/nav/collapse/CollapseNavbar.tsx","components/header/nav/collapse/CollapseButton.tsx","components/header/nav/collapse/CollapseNav.tsx","components/header/nav/Navbar.tsx","components/header/nav/NavbarComp.container.tsx","components/header/Header.tsx","components/footer/three/FooterNav.tsx","components/footer/three/FooterNav.container.tsx","components/footer/Footer.tsx","assets/images/slider/1.jpg","assets/images/slider/2.jpg","assets/images/slider/3.jpg","components/content/main/welcome/Slider.tsx","components/content/main/welcome/Welcome.tsx","components/content/main/metod/Metod.tsx","components/content/main/competence/CompetencesMainPage.tsx","components/content/main/Main.tsx","components/content/polls/PollMessage.tsx","components/content/polls/PoolLink.tsx","store/pools-reducer.ts","components/content/polls/PollLink.container.tsx","components/content/polls/Polls.tsx","assets/hooks/http.ts","components/content/polls/Polls.container.tsx","components/admin/users/User.tsx","components/admin/users/Users.tsx","assets/hocs/ClosedAccess.tsx","components/admin/users/Users.container.tsx","components/form-controls/FormControls.tsx","assets/validators/validators.ts","components/admin/registration/form/RegistrForm.tsx","components/admin/registration/form/RegistrForm.container.tsx","components/admin/registration/Registr.tsx","components/content/polls/poll/AnswerOpt.tsx","components/content/polls/poll/Question.tsx","components/content/polls/poll/Poll.tsx","components/content/polls/poll/Poll.container.tsx","components/admin/polls/poll/Poll.tsx","components/admin/polls/Polls.tsx","components/admin/polls/Polls.container.tsx","components/admin/add-poll/form/AddPollForm.tsx","components/admin/add-poll/user-list/UserListItem.tsx","components/admin/add-poll/user-list/UserList.tsx","components/admin/add-poll/user-list/UserList.container.tsx","components/admin/add-poll/AddPoll.tsx","components/admin/add-poll/AddPoll.container.tsx","components/admin/add-interviewers/polls/form/SelectPollInput.tsx","components/admin/add-interviewers/polls/list/SelectPollListItem.tsx","components/admin/add-interviewers/polls/list/SelectPollList.tsx","components/admin/add-interviewers/polls/SelectPoll.tsx","components/admin/add-interviewers/polls/SelectPoll.container.tsx","components/admin/add-interviewers/users/SelectInterviewersItem.tsx","components/admin/add-interviewers/users/SelectInterviewers.tsx","components/admin/add-interviewers/users/SelectInterviewers.container.tsx","components/admin/add-interviewers/AdminAddInterviewer.tsx","components/admin/add-interviewers/AdminAddInterviewer.container.tsx","assets/images/user.png","components/content/profile/profile/info/Info.tsx","components/content/profile/profile/info/Info.container.tsx","components/content/profile/profile/go-to-polls/GoToPolls.tsx","components/content/profile/profile/Profile.tsx","components/content/profile/profile/Profile.container.tsx","components/content/profile/appraisal/Competence.tsx","components/content/profile/appraisal/Appraisal.tsx","components/content/profile/appraisal/Appraisal.container.tsx","components/content/profile/ProfilePage.tsx","components/content/router/AdminRouter.tsx","components/content/login/forms/LoginForm.tsx","components/content/login/forms/LoginForm.container.tsx","components/content/login/Login.tsx","components/content/router/UserRouter.tsx","components/content/router/UserRouter.container.tsx","components/content/router/Router.tsx","components/content/Contents.tsx","store/app-reducer.tsx","components/content/Contents.container.tsx","App.tsx","reportWebVitals.ts","store/store.ts","index.tsx","components/header/nav/collapse/Collapse.module.css","components/admin/registration/Registr.module.css","components/content/profile/appraisal/Appraisal.module.css","components/content/login/Login.module.css","components/header/nav/Navbar.module.css","components/footer/Footer.module.css","components/content/main/competence/CompetenceMainPage.module.css","components/admin/add-poll/AddPoll.module.css","components/content/profile/profile/info/Info.module.css"],"names":["module","exports","Logout","props","Nav","Link","className","classes","logout","onClick","handleClick","initialState","user","isIn","token","info","id","user_name","user_position","isAdmin","login","email","competences","setInAC","type","setUserInfoAC","setToken","setUser","dispatch","userReducer","state","action","LogoutContainer","useDispatch","session","useSelector","console","log","AdminNav","NavDropdown","title","Item","to","AdminNavContainer","AdminCollapse","admin","setCollapse","Collapse","in","open","el","AdminCollapseContainer","useState","setOpen","CollapseNavbar","profile","CollapseButton","button","data-bs-toggle","data-bs-target","collapse_button","CollapseNav","NavbarComp","Navbar","bg","variant","container","navbar","usernav","Brand","href","collapse","NavbarCompContainer","useEffect","Header","React","memo","FooterNav","FooterNavContainer","Footer","footer","block","Slider","Carousel","src","image_one","alt","Caption","image_two","image_three","Welcome","ListGroup","text","Metod","metod","metod_info","CompetenceMainPage","horizontal","ListGroupItem","list","list_competences","Main","PollMessage","PoolLink","item","pathname","search","inter_id","Button","polls","questions","currentPoll","poolsReducer","filter","poll","pollID","setPollsAC","PollLinkContainer","setCurrentPoll","setCurrentPollAC","Polls","Card","Body","polls_container","pools","map","prop","userInfo","useHttp","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","res","json","data","ok","Error","message","clearError","PollsContainer","userId","then","User","Users","Table","users","withClosedAccess","Component","setUsers","catch","e","ErrorMessage","FormControl","input","meta","touched","children","hasError","Input","restProps","child","required","value","minLengthCreator","minLength","length","minName","minPos","minPassword","maxLength","maxLengthCreator","reduxForm","form","Form","onSubmit","handleSubmit","Field","name","placeholder","component","validate","RegistrationFormContainer","redirect","setRedirect","registr","AnswerOpts","htmlFor","Question","question","AnswerOpt","quest","errorMessage","withRouter","setErrorMessage","setQuestionsAC","Object","keys","answers","Array","from","poll_id","URLSearchParams","location","get","AdminPollItem","appraisal_target_id","isOver","AdminPollsContainer","setPolls","AddPollForm","onChange","setInput","target","usersFilter","clearFilter","UserListItem","UserListContainer","AdminAddPoll","AdminAddPollContainer","toString","includes","SelectPollInput","SelectPollListItem","SelectPollList","SelectPoll","SelectPollContainer","filteredPolls","setFilteredPolls","SelectInterviewersItem","SelectInterviewers","SelectInterviewersContainer","AdminAddInterviewerContainer","key","Info","Col","Image","roundedCircle","image","width","height","position","InfoContainer","GoToPolls","Profile","havePolls","ProfileContainer","Competence","competence","result","Appraisal","appraisal","comptences","comp","Text","AppraisalContainer","user_id","setCompetenceAC","ProfilePage","Tabs","defaultActiveKey","Tab","eventKey","AdminRouter","render","path","exact","Registr","field","LoginFormContainer","handlerSubmit","localStorage","setItem","Login","UserRouter","UserRouterContainer","Router","Content","content","initialized","appReducer","ContentContainer","parse","getItem","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8dd4577b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Welcome_block__1dkTX\",\"text\":\"Welcome_text__6MVU6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"metod_info\":\"Metod_metod_info__2qHdC\",\"metod\":\"Metod_metod__Y1pd2\",\"metod_image\":\"Metod_metod_image__1MxSC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logout\":\"Logout_logout__2Dsbf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FooterNav_container__1eusv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content_content__1fQJY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"polls_container\":\"Polls_polls_container__11e5P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"PoolLink_item__29Y6f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SelectPoll_input__2P8_y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dWbm\"};","import React from 'react';\r\nimport {Nav} from \"react-bootstrap\";\r\nimport classes from \"./Logout.module.css\";\r\n\r\n\r\ninterface IProps {\r\n  handleClick: () => void;\r\n}\r\n\r\nconst Logout = (props: IProps) => {\r\n  return(\r\n    <Nav.Link className={classes.logout}>\r\n      <button className=\"text-light\" onClick={props.handleClick}>\r\n        Выйти\r\n      </button>\r\n    </Nav.Link>\r\n  )\r\n}\r\n\r\nexport default Logout;","import {ICompetence, IUserInfo} from \"../interfaces/User.types\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\nconst initialState = {\r\n  user:{\r\n    isIn: false,\r\n    token: null,\r\n    info: {\r\n      id: 0,\r\n      user_name: \"\",\r\n      user_position: '',\r\n      isAdmin: false,\r\n      login: '',\r\n      email: \"\"\r\n    },\r\n    competences: []\r\n  }\r\n}\r\n\r\ntype TState = typeof initialState;\r\ntype UserActionsType = ReturnType<typeof setInAC> | ReturnType<typeof setToken> |\r\n  ReturnType<typeof setUserInfoAC> | ReturnType<typeof setCompetenceAC>\r\n\r\nconst userReducer = (state: TState = initialState, action: UserActionsType) => {\r\n  switch (action.type) {\r\n    case \"SET-IN\": {\r\n      return {...state, user: {...state.user, isIn: action.isIn}}\r\n    }\r\n    case \"SET-USER-INFO\": {\r\n      return {...state, user: {...state.user, info: action.info}}\r\n    }\r\n    case \"SET-TOKEN\": {\r\n      return {...state, user: {...state.user, token: action.token}}\r\n    }\r\n    case \"SET-COMPETENCES\": {\r\n      return {...state, user: {...state.user, competences: action.competences}}\r\n    }\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport const setInAC = (isIn: boolean) => ({type: \"SET-IN\", isIn} as const);\r\nexport const setUserInfoAC = (info: IUserInfo) => ({type: \"SET-USER-INFO\", info} as const);\r\nexport const setToken = (token) => ({type: \"SET-TOKEN\", token} as const);\r\nexport const setCompetenceAC = (competences: ICompetence[]) => ({type: \"SET-COMPETENCES\", competences} as const);\r\n\r\n\r\nexport const setUser = (info: IUserInfo) => (dispatch: Dispatch<UserActionsType>) => {\r\n  dispatch(setInAC(true));\r\n  dispatch(setUserInfoAC(info));\r\n}\r\nexport const logout = () => (dispatch: Dispatch<UserActionsType>) => {\r\n  dispatch(setInAC(false));\r\n  dispatch(setUserInfoAC({\r\n    id: 0,\r\n    user_name: \"\",\r\n    user_position: '',\r\n    isAdmin: false,\r\n    login: '',\r\n    email: \"\"\r\n  }))\r\n}\r\n\r\n// export const authentication = (id: number) => (dispatch: any) => {\r\n//   return authAPI.getMe(id).then((res: AxiosResponse) => {\r\n//     if(res.status === 0){\r\n//       const {id, user_name, user_position, isAdmin, login, email} = res.data;\r\n//       dispatch(setUser({id, user_name, user_position, isAdmin, login, email}));\r\n//     }\r\n//   });\r\n// }\r\n\r\nexport const login = (token: string, userInfo: any) => (dispatch: any) => {\r\n  dispatch(setToken(token));\r\n  dispatch(setUserInfoAC(userInfo));\r\n  dispatch(setInAC(true));\r\n\r\n}\r\n\r\n// export const registration = (email: string, password: string) => (dispatch) => {\r\n//   // console.log(\"You here\", email, password)\r\n//   // authAPI.postRegistr(email, password).then((res: AxiosResponse) => {\r\n//   //   console.log(res);\r\n//   // });\r\n// }\r\n\r\nexport default userReducer;","import React from 'react';\r\nimport Logout from \"./Logout\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {logout} from \"../../../../store/user-reducer\";\r\nimport {ReducersType} from \"../../../../store/store\";\r\n\r\n\r\nconst LogoutContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const session = useSelector((state: ReducersType) => state.user.user.isIn)\r\n\r\n  const handleClick = () => {\r\n    dispatch(logout());\r\n    console.log(session);\r\n  }\r\n\r\n  return(\r\n    <Logout\r\n      handleClick={handleClick}\r\n    />\r\n  )\r\n}\r\n\r\nexport default LogoutContainer;","import React from 'react';\r\nimport {NavDropdown} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst AdminNav = () => {\r\n  return(\r\n    <NavDropdown title=\"Панель администратора\" id=\"admin-panel\">\r\n      <NavDropdown.Item>\r\n        <Link to=\"/admin/registration\">\r\n          Добавить пользователя\r\n        </Link>\r\n      </NavDropdown.Item>\r\n      <NavDropdown.Item>\r\n        <Link to=\"/admin/users\">\r\n          Список пользователей\r\n        </Link>\r\n      </NavDropdown.Item>\r\n      <NavDropdown.Item>\r\n        <Link to=\"/admin/polls\">\r\n          Список опросов\r\n        </Link>\r\n      </NavDropdown.Item>\r\n      <NavDropdown.Item>\r\n        <Link to=\"/admin/add-poll\">\r\n          Выбрать цель опроса\r\n        </Link>\r\n      </NavDropdown.Item>\r\n      <NavDropdown.Item>\r\n        <Link to=\"/admin/add-interviewer\">\r\n          Выбрать проходящих опрос\r\n        </Link>\r\n      </NavDropdown.Item>\r\n    </NavDropdown>\r\n  )\r\n}\r\n\r\nexport default AdminNav;","import React from 'react';\r\nimport AdminNav from \"./AdminNav\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ReducersType} from \"../../../../store/store\";\r\n\r\n\r\nconst AdminNavContainer = () => {\r\n  const isAdmin: boolean = useSelector((state: ReducersType) => state.user.user.info.isAdmin);\r\n  if(isAdmin){\r\n    return(\r\n      <AdminNav />\r\n    )\r\n  }\r\n  return <></>\r\n}\r\n\r\nexport default AdminNavContainer;","import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport {Collapse} from \"react-bootstrap\";\r\nimport classes from \"./Collapse.module.css\";\r\n\r\n\r\ninterface IProps {\r\n  open: boolean;\r\n  setCollapse: any;\r\n}\r\n\r\nconst AdminCollapse = (props: IProps) => {\r\n  return(\r\n    <div>\r\n      <div>\r\n        <button\r\n          className={`${classes.admin} bg-success text-white`}\r\n          onClick={props.setCollapse}\r\n        >\r\n          <div className={\"bold\"}>\r\n            Панель администратора\r\n          </div>\r\n        </button>\r\n      </div>\r\n      <div className={'text-white'}>\r\n        <Collapse in={props.open}>\r\n          <div id=\"admin-panel\">\r\n            <div className={classes.el}>\r\n              <Link to=\"/admin/registration\" className={\"text-white\"}>\r\n                Добавить пользователя\r\n              </Link>\r\n            </div>\r\n            <div className={classes.el}>\r\n              <Link to=\"/admin/users\" className={\"text-white\"}>\r\n                Список пользователей\r\n              </Link>\r\n            </div>\r\n            <div className={classes.el}>\r\n              <Link to=\"/admin/polls\" className={\"text-white\"}>\r\n                Список опросов\r\n              </Link>\r\n            </div>\r\n            <div className={classes.el}>\r\n              <Link to=\"/admin/add-poll\" className={\"text-white\"}>\r\n                Выбрать цель опроса\r\n              </Link>\r\n            </div>\r\n            <div className={classes.el}>\r\n              <Link to=\"/admin/add-interviewer\" className={\"text-white\"}>\r\n                Выбрать проходящих опрос\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </Collapse>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminCollapse;","import React, {useState} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {ReducersType} from \"../../../../store/store\";\r\nimport AdminCollapse from \"./AdminCollapse\";\r\n\r\n\r\nconst AdminCollapseContainer = () => {\r\n  const isAdmin: boolean = useSelector((state: ReducersType) => state.user.user.info.isAdmin);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const setCollapse = () => {\r\n    switch (open) {\r\n      case true: setOpen(false); break;\r\n      case false: setOpen(true); break;\r\n      default: setOpen(false);\r\n    }\r\n  }\r\n\r\n  if(isAdmin){\r\n    return <AdminCollapse open={open} setCollapse={setCollapse} />\r\n  }\r\n\r\n  return(\r\n    <></>\r\n  )\r\n}\r\n\r\nexport default AdminCollapseContainer;","import React from 'react';\r\nimport {Nav, Navbar, Collapse} from \"react-bootstrap\";\r\nimport classes from \"./Collapse.module.css\";\r\nimport {Link} from \"react-router-dom\";\r\nimport LogoutContainer from \"../logout/Logout.container\";\r\nimport AdminCollapseContainer from \"./AdminCollapse.container\";\r\n\r\n\r\ninterface IProps {\r\n  isIn: boolean\r\n  open: boolean;\r\n}\r\n\r\nconst CollapseNavbar = (props: IProps) => {\r\n  return (\r\n    <Collapse in={props.open}>\r\n      <Nav>\r\n        <div>\r\n          <Nav.Link>\r\n            <Link to={\"/\"} className=\"text-light\">\r\n              Главная\r\n            </Link>\r\n          </Nav.Link>\r\n          <Nav.Link>\r\n            <Link to={\"/polls\"} className=\"text-light\">\r\n              Опросы\r\n            </Link>\r\n          </Nav.Link>\r\n          {props.isIn ?\r\n            <div className={classes.profile}>\r\n              <Nav.Link>\r\n                <Link to={\"/profile\"} className=\"text-light\">\r\n                  Профиль\r\n                </Link>\r\n              </Nav.Link>\r\n              <LogoutContainer/>\r\n            </div>\r\n            :\r\n            <Nav.Link>\r\n              <Link to={\"/login\"} className=\"text-light\">\r\n                Войти\r\n              </Link>\r\n            </Nav.Link>\r\n          }\r\n\r\n          <AdminCollapseContainer />\r\n        </div>\r\n      </Nav>\r\n    </Collapse>\r\n  );\r\n}\r\n\r\nexport default CollapseNavbar;","import React from 'react';\r\nimport {Nav, Navbar} from \"react-bootstrap\";\r\nimport classes from \"./Collapse.module.css\";\r\n\r\n\r\ninterface IProps {\r\n  setCollapse: any;\r\n}\r\n\r\nconst CollapseButton = (props: IProps) => {\r\n  return (\r\n    <Nav className={`navbar bg-success text-white`}>\r\n      <div className={\"container-fluid\"}>\r\n          <button\r\n            className={`${classes.button} btn btn-succes`}\r\n            type={\"button\"}\r\n            data-bs-toggle={\"collapse\"}\r\n            data-bs-target={\"#navbar\"}\r\n            onClick={props.setCollapse}\r\n          >\r\n            <div className={classes.collapse_button}>\r\n              <span>——————</span>\r\n              <span>——————</span>\r\n              <span>——————</span>\r\n            </div>\r\n          </button>\r\n        </div>\r\n    </Nav>\r\n  );\r\n}\r\n\r\nexport default CollapseButton;","import React from 'react';\r\nimport CollapseNavbar from \"./CollapseNavbar\";\r\nimport CollapseButton from \"./CollapseButton\";\r\n\r\n\r\ninterface IProps {\r\n  open: boolean;\r\n  isIn: boolean;\r\n  setCollapse: any;\r\n}\r\n\r\nconst CollapseNav = (props: IProps) => {\r\n  return(\r\n    <div>\r\n      <CollapseButton setCollapse={props.setCollapse} />\r\n      <CollapseNavbar isIn={props.isIn} open={props.open} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CollapseNav;","import React from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport classes from './Navbar.module.css'\r\nimport {Link} from \"react-router-dom\";\r\nimport LogoutContainer from \"./logout/Logout.container\";\r\nimport AdminNavContainer from \"./admin-nav/AdminNav.container\";\r\nimport CollapseNav from \"./collapse/CollapseNav\";\r\n\r\n\r\ninterface IProps {\r\n  open: boolean;\r\n  isIn: boolean;\r\n  setCollapse: any;\r\n}\r\n\r\nconst NavbarComp = (props: IProps) =>{\r\n  return(\r\n    <Navbar bg='success' variant=\"dark\" className={classes.container}>\r\n      <div className={classes.navbar}>\r\n        <div className={classes.usernav}>\r\n          <Nav className=\"mr-auto\">\r\n            <Navbar.Brand href=\"/\">\r\n              <Link to=\"/home\" className=\"text-light\">\r\n                360\r\n              </Link>\r\n            </Navbar.Brand>\r\n            <Nav.Link>\r\n              <Link to={\"/\"} className=\"text-light\">\r\n                Главная\r\n              </Link>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <Link to={\"/polls\"} className=\"text-light\">\r\n                Опросы\r\n              </Link>\r\n            </Nav.Link>\r\n            {props.isIn ?\r\n              <div className={classes.profile}>\r\n                <Nav.Link>\r\n                  <Link to={\"/profile\"} className=\"text-light\">\r\n                    Профиль\r\n                  </Link>\r\n                </Nav.Link>\r\n                <LogoutContainer />\r\n              </div>\r\n              :\r\n              <Nav.Link>\r\n                <Link to={\"/login\"} className=\"text-light\">\r\n                  Войти\r\n                </Link>\r\n              </Nav.Link>\r\n            }\r\n          </Nav>\r\n        </div>\r\n        <Nav>\r\n          <AdminNavContainer />\r\n        </Nav>\r\n      </div>\r\n      <div className={classes.collapse}>\r\n        <CollapseNav\r\n          open={props.open}\r\n          isIn={props.isIn}\r\n          setCollapse={props.setCollapse}\r\n        />\r\n      </div>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default NavbarComp;","import React, {useEffect, useState} from 'react';\r\nimport NavbarComp from \"./Navbar\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ReducersType} from \"../../../store/store\";\r\n\r\n\r\nconst NavbarCompContainer = () => {\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const isIn = useSelector((state: ReducersType) => state.user.user.isIn);\r\n\r\n  const setCollapse = () => {\r\n    switch (open) {\r\n      case true: setOpen(false); break;\r\n      case false: setOpen(true); break;\r\n      default: setOpen(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n  }, [isIn])\r\n\r\n  return(\r\n    <NavbarComp\r\n      isIn={isIn}\r\n      open={open}\r\n      setCollapse={setCollapse}\r\n    />\r\n  )\r\n}\r\n\r\nexport default NavbarCompContainer;","import React from 'react';\r\nimport NavbarCompContainer from \"./nav/NavbarComp.container\";\r\n\r\n\r\nconst Header = React.memo(() => {\r\n  return(\r\n    <header>\r\n      <NavbarCompContainer />\r\n    </header>\r\n  )\r\n})\r\n\r\nexport default Header","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport classes from \"./FooterNav.module.css\";\r\n\r\n\r\ninterface IProps {\r\n  isIn: boolean;\r\n}\r\n\r\nconst FooterNav = (props: IProps) => {\r\n  return(\r\n    <div className={classes.container}>\r\n      <div>\r\n        <Link to={\"/home\"} className={\"text-light\"}>\r\n          Главная\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <Link to={\"/polls\"} className={\"text-light\"}>\r\n          Опросы\r\n        </Link>\r\n      </div>\r\n      {props.isIn ?\r\n        <div>\r\n          <Link to={\"/profile\"} className={\"text-light\"}>\r\n            Профиль\r\n          </Link>\r\n        </div>\r\n        :\r\n        <div>\r\n          <Link to={\"/login\"} className={\"text-light\"}>\r\n            Войти\r\n          </Link>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FooterNav;","import React from 'react';\r\nimport FooterNav from \"./FooterNav\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ReducersType} from \"../../../store/store\";\r\n\r\n\r\nconst FooterNavContainer = () =>{\r\n  const isIn = useSelector((state: ReducersType) => state.user.user.isIn);\r\n  return(\r\n    <FooterNav\r\n      isIn={isIn}\r\n    />\r\n  )\r\n}\r\n\r\nexport default FooterNavContainer;","import React from 'react';\r\nimport classes from \"./Footer.module.css\";\r\nimport FooterNavContainer from \"./three/FooterNav.container\";\r\n\r\n\r\nconst Footer = React.memo(() => {\r\n  return(\r\n    <footer className={`${classes.footer} bg-success text-light mt-auto mb-0 footer`}>\r\n      <div className={classes.block}>\r\n        <div className={classes.el}>\r\n          Icons made by&nbsp;\r\n          <a href=\"https://www.freepik.com\"\r\n             title=\"Freepik\"\r\n             className={'text-light'}>Freepik</a> from&nbsp;\r\n          <a\r\n            href=\"https://www.flaticon.com/\"\r\n            title=\"Flaticon\"\r\n            className={'text-light'}>www.flaticon.com</a>\r\n        </div>\r\n        <div className={classes.el}>\r\n\r\n        </div>\r\n        <div className={classes.el}>\r\n          <FooterNavContainer />\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  )\r\n})\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/1.f7886344.jpg\";","export default __webpack_public_path__ + \"static/media/2.aa714752.jpg\";","export default __webpack_public_path__ + \"static/media/3.e801deb7.jpg\";","import React from 'react';\r\nimport {Carousel} from \"react-bootstrap\";\r\nimport image_one from \"./../../../../assets/images/slider/1.jpg\";\r\nimport image_two from \"./../../../../assets/images/slider/2.jpg\";\r\nimport image_three from \"./../../../../assets/images/slider/3.jpg\";\r\n\r\n\r\nconst Slider = () => {\r\n  return(\r\n    <Carousel>\r\n      <Carousel.Item>\r\n        <img\r\n          className=\"d-block w-100 max-h-700\"\r\n          src={image_one}\r\n          alt=\"First slide\"\r\n        />\r\n        <Carousel.Caption>\r\n          <h3>Давайте оценку своим коллегам</h3>\r\n          <p>Оценивайте своих коллег и руководителей чтобы помочь найти им их слабые и сильные стороны</p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <img\r\n          className=\"d-block w-100 max-h-700\"\r\n          src={image_two}\r\n          alt=\"Second slide\"\r\n        />\r\n\r\n        <Carousel.Caption>\r\n          <h3>Полуйте оценку от своих коллег</h3>\r\n          <p>Узнайте о своих сильных и слабых сторон, которые замечают коллеги и руководители</p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <img\r\n          className=\"d-block w-100 max-h-700\"\r\n          src={image_three}\r\n          alt=\"Third slide\"\r\n        />\r\n\r\n        <Carousel.Caption>\r\n          <h3>Давайте все станем немного лучше</h3>\r\n          <p></p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n    </Carousel>\r\n  )\r\n}\r\n\r\nexport default Slider;","import React from 'react';\r\nimport {ListGroup} from \"react-bootstrap\";\r\nimport Slider from \"./Slider\";\r\nimport classes from \"./Welcome.module.css\";\r\n\r\n\r\nconst Welcome = () => {\r\n  return(\r\n    <ListGroup.Item className={classes.block}>\r\n      <div>\r\n        <div className={classes.text}>\r\n          <h3>Проводим опросы для оценивания персонала используя метод 360 градусов</h3>\r\n        </div>\r\n        <div>\r\n          <Slider />\r\n        </div>\r\n      </div>\r\n    </ListGroup.Item>\r\n  )\r\n}\r\n\r\nexport default Welcome;","import React from 'react';\r\nimport classes from \"./Metod.module.css\";\r\n\r\n\r\nconst Metod = () => {\r\n  return(\r\n    <div className={classes.metod}>\r\n      <div className={`${classes.metod_info} bg-success text-white bold`}>\r\n        Метод «360 градусов» — это метод текущей оценки персонала, который заключается в выявлении степени соответствия сотрудника занимаемой должности посредством опроса делового окружения сотрудника. При использовании этого метода оценку сотруднику дают «со всех сторон», то есть не только непосредственный руководитель, но и коллеги и подчиненные, а также сам сотрудник.\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Metod;","import React from 'react';\r\nimport {ListGroup, ListGroupItem} from \"react-bootstrap\";\r\nimport classes from \"./CompetenceMainPage.module.css\";\r\n\r\n\r\nconst CompetenceMainPage = () => {\r\n  return(\r\n    <ListGroup horizontal className={classes.competences}>\r\n      <ListGroupItem className={`${classes.text} s34 bold`} >\r\n        Для получения оценки окружение её цели должны пройти опрос, ответив на ряд вопросов. Ответ на каждый из этих вопросов даст вам оценку по той, или иной компетенции.\r\n      </ListGroupItem>\r\n      <ListGroupItem className={`bg-success text-white ${classes.list}`}>\r\n        <div className={\"bold\"}>\r\n          Список компетенций:\r\n        </div>\r\n        <div className={`${classes.list_competences}`}>\r\n          <div>\r\n            Клиентоориентированность\r\n          </div>\r\n          <div>\r\n            Лояльность\r\n          </div>\r\n          <div>\r\n            Инициативность\r\n          </div>\r\n          <div>\r\n            Адаптивность\r\n          </div>\r\n          <div>\r\n            Самостоятельность\r\n          </div>\r\n          <div>\r\n            Стрессоустойчивость\r\n          </div>\r\n          <div>\r\n            Стремление к общению\r\n          </div>\r\n          <div>\r\n            Управление командой\r\n          </div>\r\n          <div>\r\n            Планирование\r\n          </div>\r\n          <div>\r\n            Обучение\r\n          </div>\r\n          <div>\r\n            Мотивирование\r\n          </div>\r\n        </div>\r\n      </ListGroupItem>\r\n    </ListGroup>\r\n  )\r\n}\r\n\r\nexport default CompetenceMainPage;","import React from 'react';\r\nimport Welcome from \"./welcome/Welcome\";\r\nimport Metod from \"./metod/Metod\";\r\nimport CompetenceMainPage from \"./competence/CompetencesMainPage\";\r\n\r\n\r\nconst Main = () =>{\r\n  return(\r\n    <div>\r\n      <Welcome />\r\n      <Metod />\r\n      <CompetenceMainPage />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\n\r\nconst PollMessage = () => {\r\n  return(\r\n    <div>\r\n      Чтобы увидеть опросы для прохождения, пожалуйста, войдите\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PollMessage;","import React from 'react';\r\nimport {Button, ListGroupItem} from \"react-bootstrap\";\r\nimport classes from \"./PoolLink.module.css\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\ninterface IProps {\r\n  id: number;\r\n  inter_id: number;\r\n  user_name: string;\r\n  user_position: string;\r\n  setCurrentPoll: (poll: any) => any;\r\n}\r\n\r\nconst PoolLink = (props: IProps) => {\r\n  return(\r\n    <ListGroupItem>\r\n      <div className={classes.item}>\r\n        <div className=\"text-dark\">\r\n          <span className=\"fw-bold\">{props.user_name}</span>\r\n          &nbsp;\r\n          <span>{props.user_position}</span>\r\n        </div>\r\n        <div>\r\n          <Link to={{pathname: '/poll', search: `id=${props.id}&inter_id=${props.inter_id}`}}>\r\n            <Button\r\n              variant=\"warning\"\r\n            >Перейти к опросу</Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </ListGroupItem>\r\n  )\r\n}\r\n\r\nexport default PoolLink;","import {TPoll, TQuestion} from \"../interfaces/Polls.types\";\r\n\r\n\r\nconst initialState = {\r\n  polls:[],\r\n  questions: [],\r\n  currentPoll: {}\r\n}\r\n\r\ntype TState = typeof initialState;\r\ntype PollsActionType = ReturnType<typeof setPollsAC> | ReturnType<typeof removePollAC> |\r\n  ReturnType<typeof setQuestionsAC> | ReturnType<typeof setCurrentPollAC>;\r\n\r\nconst poolsReducer = (state: TState = initialState, action: PollsActionType) => {\r\n  switch (action.type) {\r\n    case \"SET-POLLS\": {\r\n      return {...state, polls: action.polls};\r\n    }\r\n    case \"REMOVE-POLL\": {\r\n      return {...state, polls: state.polls.filter((poll) => {\r\n        return !(poll.id === action.pollID)\r\n      })};\r\n    }\r\n    case \"SET-QUESTIONS\": {\r\n      return {...state, questions: action.questions}\r\n    }\r\n    case \"SET-CURRENT-POLL\": {\r\n      return {...state, currentPoll: action.poll}\r\n    }\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default poolsReducer;\r\n\r\nexport const setPollsAC = (polls: TPoll[]) => ({type: \"SET-POLLS\", polls} as const);\r\nexport const removePollAC = (pollID: number) => ({type: \"REMOVE-POLL\", pollID} as const);\r\nexport const setQuestionsAC = (questions: Array<TQuestion>) => ({type: \"SET-QUESTIONS\", questions} as const);\r\nexport const setCurrentPollAC = (poll: any) => ({type: \"SET-CURRENT-POLL\", poll} as const);","import React from 'react';\r\nimport PoolLink from \"./PoolLink\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setCurrentPollAC} from \"../../../store/pools-reducer\";\r\n\r\n\r\ninterface IProps {\r\n  id: number;\r\n  inter_id: number;\r\n  user_name: string;\r\n  user_position: string;\r\n}\r\n\r\nconst PollLinkContainer = (props: IProps) => {\r\n  const dispatch = useDispatch();\r\n  const setCurrentPoll = (poll) => {\r\n    console.log(\"Tac\")\r\n    dispatch(setCurrentPollAC(poll));\r\n  }\r\n\r\n  return(\r\n    <PoolLink\r\n      id={props.id}\r\n      inter_id={props.inter_id}\r\n      user_name={props.user_name}\r\n      user_position={props.user_position}\r\n      setCurrentPoll={setCurrentPoll}\r\n    />\r\n  )\r\n}\r\n\r\nexport default PollLinkContainer;","import React from 'react';\r\nimport {ListGroup, Card} from \"react-bootstrap\";\r\nimport {TPoll} from \"../../../interfaces/Polls.types\";\r\nimport classes from './Polls.module.css';\r\nimport PollMessage from \"./PollMessage\";\r\nimport PollLinkContainer from \"./PollLink.container\";\r\n\r\n\r\ninterface IProps {\r\n  pools: TPoll[];\r\n  isIn: boolean;\r\n}\r\n\r\nconst Polls = (props: IProps) => {\r\n  return (\r\n    <Card>\r\n      <Card.Header className=\"fw-bold s22\">\r\n        Список опросов для проведения оценки:\r\n      </Card.Header>\r\n      <Card.Body>\r\n        {props.isIn ?\r\n          <div className={classes.polls_container}>\r\n            <ListGroup>\r\n              {props.pools.map((prop: TPoll) => (\r\n                <PollLinkContainer\r\n                  key={prop.id}\r\n                  id={prop.id}\r\n                  inter_id={prop.inter_id}\r\n                  user_name={prop.userInfo.user_name}\r\n                  user_position={prop.userInfo.user_position}\r\n                />\r\n              ))}\r\n            </ListGroup>\r\n          </div>\r\n          :\r\n          <PollMessage />\r\n        }\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Polls;","import {useCallback, useState} from \"react\";\r\n\r\n\r\nconst useHttp = () => {\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n    try {\r\n      if(body){\r\n        headers['Content-Type'] = 'application/json';\r\n        body = JSON.stringify(body);\r\n      }\r\n      const res =  await fetch(url, {method, body, headers});\r\n      const data = await res.json();\r\n      if(!res.ok) {\r\n        throw new Error(data.message || \"Что-то пошло не так\");\r\n      }\r\n      return data\r\n    } catch (e) {\r\n      setError(e.message);\r\n      throw e;\r\n    }\r\n  }, [])\r\n  const clearError = () => setError(null);\r\n  return {request, error, clearError}\r\n}\r\n\r\nexport default useHttp;","import React, {useEffect} from 'react';\r\nimport Polls from \"./Polls\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ReducersType} from \"../../../store/store\";\r\nimport {TPoll} from \"../../../interfaces/Polls.types\";\r\nimport {setPollsAC} from \"../../../store/pools-reducer\";\r\nimport useHttp from \"../../../assets/hooks/http\";\r\n\r\nconst PollsContainer = () => {\r\n  const isIn: boolean = useSelector((state: ReducersType) => state.user.user.isIn);\r\n  const pools: Array<TPoll> = useSelector((state: ReducersType) => state.pools.polls);\r\n  const userId: number = useSelector((state: ReducersType) => state.user.user.info.id);\r\n  const {request} = useHttp();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if(userId !== 0){\r\n      request('/api/polls/', \"POST\", {userId}).then(res => {\r\n        dispatch(setPollsAC(res));\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return(\r\n    <Polls\r\n      pools={pools}\r\n      isIn={isIn}\r\n    />\r\n  )\r\n}\r\n\r\nexport default PollsContainer;","import React from \"react\";\r\nimport {IUserInfo} from \"../../../interfaces/User.types\";\r\n\r\n\r\nconst User = (props: IUserInfo) => {\r\n  return(\r\n    <tr>\r\n      <td className=\"user-id\">\r\n        {props.id}\r\n      </td>\r\n      <td className=\"user-name\">\r\n        {props.user_name}\r\n      </td>\r\n      <td className=\"user-pos\">\r\n        {props.user_position}\r\n      </td>\r\n      <td className=\"user-login\">\r\n        {props.login}\r\n      </td>\r\n      <td className=\"user-email\">\r\n        {props.email}\r\n      </td>\r\n      <td className=\"user-admin\">\r\n        {props.isAdmin}\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport {IUserInfo} from \"../../../interfaces/User.types\";\r\nimport User from \"./User\";\r\nimport {Table} from \"react-bootstrap\";\r\n\r\n\r\nconst Users = (props) => {\r\n  return(\r\n    <div>\r\n      <div>\r\n        <h3>Список пользователй</h3>\r\n      </div>\r\n      <Table>\r\n        <thead>\r\n          <th>id пользователя</th>\r\n          <th>ФИО пользователя</th>\r\n          <th>Должность пользователя</th>\r\n          <th>Это админ</th>\r\n          <th>Логин пользователя</th>\r\n          <th>Почта пользователя</th>\r\n        </thead>\r\n        <tbody>\r\n        {props.users.map((user: IUserInfo) => (\r\n          <User\r\n            key={user.id}\r\n            id={user.id}\r\n            user_name={user.user_name}\r\n            user_position={user.user_position}\r\n            isAdmin={user.isAdmin}\r\n            login={user.login}\r\n            email={user.email}\r\n          />\r\n        ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Users","import React, {Component} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {ReducersType} from \"../../store/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst withClosedAccess = (Component) => {\r\n  const ClosedComponent = (props) => {\r\n    const isAdmin = useSelector((state: ReducersType) => state.user.user.info.isAdmin);\r\n    if(!isAdmin){\r\n      return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return <Component {...props} />\r\n  }\r\n\r\n  return ClosedComponent;\r\n}\r\n\r\nexport default withClosedAccess;","import React, {useEffect, useState} from 'react';\r\nimport Users from \"./Users\";\r\nimport withClosedAccess from \"../../../assets/hocs/ClosedAccess\";\r\nimport useHttp from \"../../../assets/hooks/http\";\r\n\r\n\r\nconst UsersContainer = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const {request} = useHttp();\r\n\r\n\r\n  useEffect(() => {\r\n    request('/api/users/', \"GET\").then((res) => {\r\n      setUsers(res)\r\n    }).catch(e => console.log(e));\r\n  }, [])\r\n\r\n  return(\r\n    <Users\r\n      users={users}\r\n    />\r\n  )\r\n}\r\n\r\nexport default withClosedAccess(UsersContainer);","import React from 'react';\r\n\r\n\r\nconst ErrorMessage = ({error}) => {\r\n  return(\r\n    <div>\r\n      {error}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const FormControl = ({input, meta: {touched, error}, children}) => {\r\n  const hasError: boolean = touched && error;\r\n  return(\r\n    <div>\r\n      <div>\r\n        {children}\r\n      </div>\r\n      {hasError && <ErrorMessage error={error} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Input = (props) => {\r\n  const {input, meta, child, ...restProps} = props;\r\n  return(\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps}/>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n  const {input, meta, child, ...restProps} = props;\r\n  return(\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps}/>\r\n    </FormControl>\r\n  )\r\n}","export const required = (value) => {\r\n  if(value) return undefined;\r\n\r\n  return \"Поле должно быть заполненно\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n  if(value && value.length > maxLength) {\r\n    return `Максимальная длина ${maxLength} символов`;\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nexport const minLengthCreator = (minLength: number) => (value: string) => {\r\n  if(value && value.length < minLength) {\r\n    return `Минимальная длина ${minLength} символов`;\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\n","import React from 'react';\r\nimport {Form, reduxForm, Field} from \"redux-form\";\r\nimport {Input} from \"../../../form-controls/FormControls\";\r\nimport classes from \"../Registr.module.css\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../../../assets/validators/validators\";\r\n\r\n\r\nconst minName = minLengthCreator(3);\r\nconst minPos = minLengthCreator(5);\r\nconst minPassword = minLengthCreator(6);\r\nconst maxLength = maxLengthCreator(50);\r\n\r\nconst RegistrationForm = (props) => {\r\n  return (\r\n    <Form onSubmit={props.handleSubmit}>\r\n      <div className={classes.input}>\r\n        <Field\r\n          name=\"email\"\r\n          id=\"email\"\r\n          placeholder=\"Введите email\"\r\n          component={Input}\r\n          validate={[required, maxLength]}\r\n        />\r\n      </div>\r\n      <div className={classes.input}>\r\n        <Field\r\n          name=\"name\"\r\n          id=\"name\"\r\n          placeholder=\"Введите имя\"\r\n          component={Input}\r\n          validate={[required, minName, maxLength]}\r\n        />\r\n      </div>\r\n      <div className={classes.input}>\r\n        <Field\r\n          name=\"family\"\r\n          id=\"family\"\r\n          placeholder=\"Введите фамилию\"\r\n          component={Input}\r\n          validate={[required, minName, maxLength]}\r\n        />\r\n      </div>\r\n      <div className={classes.input}>\r\n        <Field\r\n          name=\"patronymic\"\r\n          id=\"patronymic\"\r\n          placeholder=\"Введите отчество\"\r\n          component={Input}\r\n          validate={[required, minName, maxLength]}\r\n        />\r\n      </div>\r\n      <div className={classes.input}>\r\n        <Field\r\n          name=\"position\"\r\n          id=\"position\"\r\n          placeholder=\"Введите должность\"\r\n          component={Input}\r\n          validate={[required, minPos, maxLength]}\r\n        />\r\n      </div>\r\n      <div className={classes.input}>\r\n        <Field\r\n          name=\"password\"\r\n          id=\"password\"\r\n          placeholder=\"Введите пароль\"\r\n          component={Input}\r\n          type=\"password\"\r\n          validate={[required, minPassword]}\r\n        />\r\n      </div>\r\n      <div className={classes.input}>\r\n        <Field\r\n          name=\"password_again\"\r\n          id=\"password_again\"\r\n          placeholder=\"Введите пароль ещё раз\"\r\n          component={Input}\r\n          type=\"password\"\r\n          validate={[required, minPassword]}\r\n        />\r\n      </div>\r\n      <div className={classes.input}>\r\n        <button className=\"btn btn-warning\" >\r\n          Зарегистрировать пользователя\r\n        </button>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default reduxForm({form: \"registration\"})(RegistrationForm);","import React, {useState} from 'react';\r\nimport RegistrationForm from \"./RegistrForm\";\r\nimport useHttp from \"../../../../assets/hooks/http\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst RegistrationFormContainer = () => {\r\n  const {request} = useHttp();\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  const handleSubmit = async (form) => {\r\n    try{\r\n      await request('/api/auth/register', \"POST\", {...form});\r\n      setRedirect(true)\r\n    } catch (e) {\r\n\r\n    }\r\n  }\r\n\r\n  if(redirect){\r\n    return <Redirect to={\"/\"} />\r\n  }\r\n\r\n  return(\r\n    <RegistrationForm\r\n      onSubmit={handleSubmit}\r\n    />\r\n  )\r\n}\r\n\r\nexport default RegistrationFormContainer;","import React from 'react';\r\nimport RegistrationFormContainer from \"./form/RegistrForm.container\";\r\nimport {Card, ListGroup} from \"react-bootstrap\";\r\nimport classes from \"./Registr.module.css\";\r\nimport withClosedAccess from \"../../../assets/hocs/ClosedAccess\";\r\n\r\n\r\nconst Registration = () => {\r\n  return(\r\n    <Card className={classes.registr}>\r\n      <ListGroup>\r\n        <ListGroup.Item>\r\n          <h3>Регистрация</h3>\r\n        </ListGroup.Item>\r\n        <ListGroup.Item>\r\n          <RegistrationFormContainer />\r\n        </ListGroup.Item>\r\n      </ListGroup>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default withClosedAccess(Registration)","import  React from 'react';\r\nimport {Field} from \"redux-form\";\r\n\r\n\r\ninterface IProps {\r\n  id: number;\r\n}\r\n\r\nconst AnswerOpts = (props: IProps) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <label className=\"s18 px-2\" htmlFor={`${props.id}-1`}>Совершенно согласен</label>\r\n        <Field\r\n          type=\"radio\"\r\n          component=\"input\"\r\n          id={`${props.id}-1`}\r\n          value=\"agree\"\r\n          name={`${props.id}`}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label className=\"s18 px-2\" htmlFor={`${props.id}-2`}>Скорее согласен</label>\r\n        <Field\r\n          type=\"radio\"\r\n          component=\"input\"\r\n          id={`${props.id}-2`}\r\n          value=\"rather-agree\"\r\n          name={`${props.id}`}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label className=\"s18 px-2\" htmlFor={`${props.id}-3`}>\r\n          Не знаю/ Не владею информацией\r\n        </label>\r\n        <Field\r\n          component=\"input\"\r\n          type=\"radio\"\r\n          id={`${props.id}-3`}\r\n          value=\"not-sure\"\r\n          name={`${props.id}`}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label className=\"s18 px-2\" htmlFor={`${props.id}-4`}>\r\n          Скорее не согласен\r\n        </label>\r\n        <Field\r\n          component=\"input\"\r\n          type=\"radio\"\r\n          id={`${props.id}-4`}\r\n          value=\"rather-not-agree\"\r\n          name={`${props.id}`}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label className=\"s18 px-2\" htmlFor={`${props.id}-5`}>Полностью не согласен</label>\r\n        <Field\r\n          component=\"input\"\r\n          type=\"radio\"\r\n          id={`${props.id}-5`}\r\n          value=\"not-agree\"\r\n          name={`${props.id}`}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AnswerOpts;","import React from 'react';\r\nimport {ListGroup} from \"react-bootstrap\";\r\nimport AnswerOpts from \"./AnswerOpt\";\r\n\r\n\r\ninterface IProps {\r\n  id: number\r\n  question: string;\r\n}\r\n\r\nconst Question = (props: IProps) => {\r\n  return(\r\n    <ListGroup.Item>\r\n      <div>\r\n        <div>\r\n          <label className={'fw-bold s22'}>\r\n            {props.question}\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <AnswerOpts\r\n            id={props.id}\r\n          />\r\n        </div>\r\n      </div>\r\n    </ListGroup.Item>\r\n  )\r\n}\r\n\r\nexport default Question;\r\n","import React from 'react';\r\nimport {ListGroup} from \"react-bootstrap\";\r\nimport {Form, reduxForm} from \"redux-form\";\r\nimport Question from \"./Question\";\r\nimport {TQuestion} from \"../../../../interfaces/Polls.types\";\r\n\r\n\r\nconst Poll = (props: any) => {\r\n  return (\r\n    <Form onSubmit={props.handleSubmit}>\r\n      {props.questions.map((quest: TQuestion) => (\r\n        <Question\r\n          question={quest.question}\r\n          id={quest.id}\r\n          key={quest.id}/>\r\n      ))}\r\n      {props.errorMessage && <ListGroup.Item className={\"s22\"}>{props.errorMessage}</ListGroup.Item>}\r\n      <ListGroup.Item>\r\n        <button className=\"btn btn-warning\">\r\n          Отправить оценку\r\n        </button>\r\n      </ListGroup.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({form: \"poll\"})(Poll);","import React, {useEffect, useState} from 'react';\r\nimport Poll from \"./Poll\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect, withRouter} from \"react-router-dom\"\r\nimport useHttp from \"../../../../assets/hooks/http\";\r\nimport {setQuestionsAC} from \"../../../../store/pools-reducer\";\r\nimport {TQuestion} from \"../../../../interfaces/Polls.types\";\r\nimport {ReducersType} from \"../../../../store/store\";\r\n\r\n\r\nconst PollContainer = (props) => {\r\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\r\n  const [redirect, setRedirect] = useState(false);\r\n  const questions: Array<TQuestion> = useSelector((state: ReducersType) => state.pools.questions);\r\n  const dispatch = useDispatch();\r\n  const {request} = useHttp();\r\n\r\n  useEffect(() => {\r\n    request('/api/polls/questions', \"GET\").then((res) => {\r\n      dispatch(setQuestionsAC(res));\r\n    }).catch(e => console.log(e));\r\n  }, []);\r\n\r\n\r\n  const data: any = {\r\n    questions,\r\n    errorMessage\r\n  }\r\n\r\n  const handleSubmit = async (form) => {\r\n    if(Object.keys(form).length !== questions.length){\r\n      setErrorMessage(\"Ответье на все вопросы!\");\r\n      return false;\r\n    }\r\n    setErrorMessage(\"\");\r\n    form.length = questions.length + 1;\r\n    request(\r\n      \"/api/polls/answers\",\r\n      \"POST\",\r\n      {\r\n        answers: Array.from(form),\r\n        poll_id: new URLSearchParams(props.location.search).get(\"id\"),\r\n        inter_id: new URLSearchParams(props.location.search).get(\"inter_id\")\r\n      });\r\n    setRedirect(true)\r\n  }\r\n\r\n  if(redirect){\r\n    return <Redirect to={\"/polls\"} />\r\n  }\r\n\r\n  return(\r\n    <Poll\r\n      {...data}\r\n      onSubmit={handleSubmit}\r\n    />\r\n  )\r\n}\r\n\r\nexport default withRouter(PollContainer);","import React from 'react';\r\n\r\n\r\ninterface IProps {\r\n  id: number;\r\n  appraisal_target_id: number;\r\n  isOver: boolean;\r\n  user_name: string;\r\n  user_position: string;\r\n  login: string;\r\n  email: string;\r\n}\r\n\r\nconst AdminPollItem = (props: IProps) => {\r\n  return(\r\n    <tr>\r\n      <td className=\"poll-id\">\r\n        {props.id}\r\n      </td>\r\n      <td className=\"poll-target-id\">\r\n        {props.appraisal_target_id}\r\n      </td>\r\n      <td className=\"poll-isOver\">\r\n        {props.isOver}\r\n      </td>\r\n      <td className=\"poll-target-name\">\r\n        {props.user_name}\r\n      </td>\r\n      <td className=\"poll-target-position\">\r\n        {props.user_position}\r\n      </td>\r\n      <td className=\"poll-target-login\">\r\n        {props.login}\r\n      </td>\r\n      <td className=\"poll-target-email\">\r\n        {props.email}\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default AdminPollItem;","import React from 'react';\r\nimport {Table} from \"react-bootstrap\";\r\nimport AdminPollItem from \"./poll/Poll\";\r\n\r\n\r\ninterface IPoll {\r\n  id: number;\r\n  appraisal_target_id: number;\r\n  isOver: boolean;\r\n  user_name: string;\r\n  user_position: string;\r\n  login: string;\r\n  email: string;\r\n}\r\n\r\ninterface IProps {\r\n  polls: IPoll[];\r\n}\r\n\r\nconst Polls = (props: IProps) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h3>Список опросов</h3>\r\n      </div>\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>id опроса</th>\r\n            <th>id цели опроса</th>\r\n            <th>Опрос закончен</th>\r\n            <th>Имя цели опроса</th>\r\n            <th>Должность цели опроса</th>\r\n            <th>Логин цели опроса</th>\r\n            <th>Почта цели опроса</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.polls.map((poll: IPoll) => (\r\n            <AdminPollItem\r\n              key={poll.id}\r\n              id={poll.id}\r\n              appraisal_target_id={poll.appraisal_target_id}\r\n              isOver={poll.isOver}\r\n              user_name={poll.user_name}\r\n              user_position={poll.user_position}\r\n              login={poll.login}\r\n              email={poll.email}\r\n            />\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Polls;","import React, {useEffect, useState} from 'react';\r\nimport Polls from \"./Polls\";\r\nimport useHttp from \"../../../assets/hooks/http\";\r\n\r\n\r\nconst AdminPollsContainer = () => {\r\n  const [polls, setPolls] = useState([]);\r\n  const {request} = useHttp();\r\n\r\n\r\n  useEffect(() => {\r\n    request('/api/polls/admin', \"GET\").then((res) => {\r\n      setPolls(res)\r\n    }).catch(e => console.log(e));\r\n  }, [])\r\n\r\n\r\n  return(\r\n    <Polls polls={polls} />\r\n  )\r\n}\r\n\r\nexport default AdminPollsContainer;","import React, {ChangeEvent} from 'react';\r\nimport classes from \"../AddPoll.module.css\";\r\n\r\n\r\ninterface IProps {\r\n  input: string;\r\n  setInput: (value: string) => void;\r\n  usersFilter: () => void;\r\n  clearFilter: () => void;\r\n}\r\n\r\nconst AddPollForm = (props: IProps) => {\r\n  return(\r\n    <div>\r\n      <span className={classes.search}>\r\n        <input\r\n          placeholder={\"Введите имя пользователя или его id\"}\r\n          value={props.input}\r\n          onChange={(data: ChangeEvent<HTMLInputElement>) => props.setInput(data.target.value)}\r\n        />\r\n      </span>\r\n      <span className={classes.filter}>\r\n        <button onClick={props.usersFilter} className={\"btn btn-warning\"}>\r\n          Отфильтровать\r\n        </button>\r\n      </span>\r\n      <span className={classes.clearFilter}>\r\n        <button onClick={props.clearFilter} className={\"btn btn-warning\"}>\r\n          Отменить фильтрацию\r\n        </button>\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddPollForm;","import React from 'react';\r\nimport {ListGroup} from \"react-bootstrap\";\r\nimport {IUserInfo} from \"../../../../interfaces/User.types\";\r\nimport {Field} from \"redux-form\";\r\n\r\n\r\n\r\nconst UserListItem = (props: IUserInfo) => {\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <Field\r\n          type=\"radio\"\r\n          component=\"input\"\r\n          id={`user-${props.id}`}\r\n          value={`${props.id}`}\r\n          name={`users`}\r\n        />\r\n      </td>\r\n      <td className=\"user-id\">\r\n        <label htmlFor={`user-${props.id}`}>\r\n          {props.id}\r\n        </label>\r\n      </td>\r\n      <td className=\"user-name\">\r\n        <label htmlFor={`user-${props.id}`}>\r\n          {props.user_name}\r\n        </label>\r\n      </td>\r\n      <td className=\"user-pos\">\r\n        <label htmlFor={`user-${props.id}`}>\r\n          {props.user_position}\r\n        </label>\r\n      </td>\r\n      <td className=\"user-login\">\r\n        <label htmlFor={`user-${props.id}`}>\r\n          {props.login}\r\n        </label>\r\n      </td>\r\n      <td className=\"user-email\">\r\n        <label htmlFor={`user-${props.id}`}>\r\n          {props.email}\r\n        </label>\r\n      </td>\r\n      <td className=\"user-admin\">\r\n        <label htmlFor={`user-${props.id}`}>\r\n          {props.isAdmin}\r\n        </label>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default UserListItem;","import React from 'react';\r\nimport {IUserInfo} from \"../../../../interfaces/User.types\";\r\nimport UserListItem from \"./UserListItem\";\r\nimport {reduxForm, Form} from \"redux-form\";\r\nimport {Table} from \"react-bootstrap\";\r\n\r\n\r\n// interface IProps {\r\n//   users: IUserInfo[];\r\n//   handleSubmit: any;\r\n// }\r\n\r\nconst UserList = (props) => {\r\n  return (\r\n    <Form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <h3>\r\n          Список пользователей\r\n        </h3>\r\n      </div>\r\n      <div>\r\n        <button className=\"btn btn-warning\">\r\n          Создать опрос\r\n        </button>\r\n      </div>\r\n      <Table>\r\n        <thead>\r\n          <th>*</th>\r\n          <th>id пользователя</th>\r\n          <th>фио пользователя</th>\r\n          <th>Должность</th>\r\n          <th>Логин</th>\r\n          <th>Электронная почта</th>\r\n          <th>Это Админ</th>\r\n        </thead>\r\n        <tbody>\r\n        {props.users.map((user: IUserInfo) => (\r\n          <UserListItem\r\n            key={user.id}\r\n            id={user.id}\r\n            user_name={user.user_name}\r\n            user_position={user.user_position}\r\n            isAdmin={user.isAdmin}\r\n            login={user.login}\r\n            email={user.email}\r\n          />\r\n        ))}\r\n        </tbody>\r\n      </Table>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default reduxForm({form: \"add-poll\"})(UserList);","import React, {useState} from 'react';\r\nimport UserList from \"./UserList\";\r\nimport {IUserInfo} from \"../../../../interfaces/User.types\";\r\nimport useHttp from \"../../../../assets/hooks/http\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\ninterface IProps {\r\n  users: IUserInfo[];\r\n}\r\n\r\nconst UserListContainer = (props: IProps) => {\r\n  const [redirect, setRedirect] = useState(false);\r\n  const {request} = useHttp();\r\n\r\n  const data: any = {\r\n    users: props.users\r\n  }\r\n\r\n  const handleSubmit = async (form) => {\r\n    try{\r\n      await request('/api/polls/admin', \"POST\", {...form});\r\n      setRedirect(true)\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  if(redirect){\r\n    return <Redirect to={\"/\"}/>;\r\n  }\r\n\r\n  return(\r\n    <UserList\r\n      {...data}\r\n      onSubmit={handleSubmit}\r\n    />\r\n  )\r\n}\r\n\r\nexport default UserListContainer;","import React from 'react';\r\nimport AddPollForm from \"./form/AddPollForm\";\r\nimport UserListContainer from \"./user-list/UserList.container\";\r\nimport {IUserInfo} from \"../../../interfaces/User.types\";\r\nimport {ListGroup} from \"react-bootstrap\";\r\n\r\n\r\ninterface IProps {\r\n  input: string;\r\n  users: IUserInfo[];\r\n  setInput: (data: string) => void;\r\n  usersFilter: () => void;\r\n  clearFilter: () => void;\r\n}\r\n\r\nconst AdminAddPoll = (props: IProps) => {\r\n  return(\r\n    <ListGroup>\r\n      <ListGroup.Item>\r\n        <h3>Создать цель для опроса</h3>\r\n      </ListGroup.Item>\r\n      <ListGroup.Item>\r\n        <AddPollForm\r\n          input={props.input}\r\n          setInput={props.setInput}\r\n          usersFilter={props.usersFilter}\r\n          clearFilter={props.clearFilter}\r\n        />\r\n      </ListGroup.Item>\r\n      <ListGroup.Item>\r\n        <UserListContainer\r\n          users={props.users}\r\n        />\r\n      </ListGroup.Item>\r\n    </ListGroup>\r\n  )\r\n}\r\n\r\nexport default AdminAddPoll;","import React, {useEffect, useState} from 'react';\r\nimport AdminAddPoll from \"./AddPoll\";\r\nimport useHttp from \"../../../assets/hooks/http\";\r\nimport {IUserInfo} from \"../../../interfaces/User.types\";\r\n\r\n\r\nconst AdminAddPollContainer = () => {\r\n  const [input, setInput] = useState<string>(\"\")\r\n  const [users, setUsers] = useState([]);\r\n  const {request} = useHttp();\r\n\r\n  useEffect(() => {\r\n    request('/api/users/', \"GET\").then((res) => {\r\n      setUsers(res)\r\n    }).catch(e => console.log(e));\r\n  }, [])\r\n\r\n  const usersFilter = () => {\r\n    setUsers(users.filter((user: IUserInfo) => {\r\n      return user.id.toString() === input || user.user_name.includes(input)\r\n        || user.email.includes(input) || user.login.includes(input);\r\n    }));\r\n  }\r\n\r\n  const clearFilter = async () => {\r\n    await request('/api/users/', \"GET\").then((res) => {\r\n      setUsers(res)\r\n    }).catch(e => console.log(e));\r\n    setInput(\"\");\r\n  }\r\n\r\n  return(\r\n    <AdminAddPoll\r\n      users={users}\r\n      input={input}\r\n      setInput={setInput}\r\n      usersFilter={usersFilter}\r\n      clearFilter={clearFilter}\r\n    />\r\n  )\r\n}\r\n\r\nexport default AdminAddPollContainer;","import React, {ChangeEvent} from 'react';\r\nimport classes from \"../SelectPoll.module.css\";\r\n\r\n\r\ninterface IProps {\r\n  input: string;\r\n  setInput: (input: string) => void;\r\n}\r\n\r\nconst SelectPollInput = (props: IProps) => {\r\n  return(\r\n    <div className={classes.input}>\r\n      <input\r\n        placeholder=\"Введите данные опроса\"\r\n        value={props.input}\r\n        onChange={(data: ChangeEvent<HTMLInputElement>) => props.setInput(data.target.value)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SelectPollInput;","import React from 'react';\r\nimport {ListGroup, ListGroupItem} from \"react-bootstrap\";\r\nimport {Field} from \"redux-form\";\r\n\r\n\r\ninterface IPoll {\r\n  id: number;\r\n  appraisal_target_id: number;\r\n  isOver: boolean;\r\n  user_name: string;\r\n  user_position: string;\r\n  login: string;\r\n  email: string;\r\n}\r\n\r\nconst SelectPollListItem = (props: IPoll) => {\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <Field\r\n          type=\"radio\"\r\n          component=\"input\"\r\n          id={`poll-${props.id}`}\r\n          value={`${props.id}`}\r\n          name=\"polls\"\r\n        />\r\n      </td>\r\n      <td>\r\n        <label htmlFor={`poll-${props.id}`}>\r\n          {props.id}\r\n        </label>\r\n      </td>\r\n      <td>\r\n        <label htmlFor={`poll-${props.id}`}>\r\n          {props.appraisal_target_id}\r\n        </label>\r\n      </td>\r\n      <td>\r\n        <label htmlFor={`poll-${props.id}`}>\r\n          {props.isOver}\r\n        </label>\r\n      </td>\r\n      <td>\r\n        <label htmlFor={`poll-${props.id}`}>\r\n          {props.user_name}\r\n        </label>\r\n      </td>\r\n      <td>\r\n        <label htmlFor={`poll-${props.id}`}>\r\n          {props.user_position}\r\n        </label>\r\n      </td>\r\n      <td>\r\n        <label htmlFor={`poll-${props.id}`}>\r\n          {props.login}\r\n        </label>\r\n      </td>\r\n      <td>\r\n        <label htmlFor={`poll-${props.id}`}>\r\n          {props.email}\r\n        </label>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default SelectPollListItem;","import React from 'react';\r\nimport SelectPollListItem from \"./SelectPollListItem\";\r\nimport {Table} from \"react-bootstrap\";\r\n\r\n\r\ninterface IPoll {\r\n  id: number;\r\n  appraisal_target_id: number;\r\n  isOver: boolean;\r\n  user_name: string;\r\n  user_position: string;\r\n  login: string;\r\n  email: string;\r\n}\r\n\r\ninterface IProps {\r\n  polls: IPoll[];\r\n}\r\n\r\nconst SelectPollList = (props: IProps) => {\r\n  return(\r\n    <Table>\r\n      <tbody>\r\n        {props.polls.map((poll: IPoll) => (\r\n          <SelectPollListItem\r\n            key={poll.id}\r\n            id={poll.id}\r\n            appraisal_target_id={poll.appraisal_target_id}\r\n            isOver={poll.isOver}\r\n            user_name={poll.user_name}\r\n            user_position={poll.user_position}\r\n            login={poll.login}\r\n            email={poll.email}\r\n          />\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  )\r\n}\r\n\r\nexport default SelectPollList;","import React from 'react';\r\nimport SelectPollInput from \"./form/SelectPollInput\";\r\nimport SelectPollList from \"./list/SelectPollList\";\r\n\r\n\r\ninterface IPoll {\r\n  id: number;\r\n  appraisal_target_id: number;\r\n  isOver: boolean;\r\n  user_name: string;\r\n  user_position: string;\r\n  login: string;\r\n  email: string;\r\n}\r\n\r\ninterface IProps {\r\n  input: string;\r\n  polls: IPoll[];\r\n  setInput: (input: string) => void;\r\n}\r\n\r\nconst SelectPoll = (props: IProps) => {\r\n  return(\r\n    <div>\r\n      <div>\r\n        <SelectPollInput\r\n          input={props.input}\r\n          setInput={props.setInput}\r\n        />\r\n      </div>\r\n      <div>\r\n        <SelectPollList\r\n          polls={props.polls}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SelectPoll;","import React, {useEffect, useState} from 'react';\r\nimport SelectPoll from \"./SelectPoll\";\r\nimport useHttp from \"../../../../assets/hooks/http\";\r\n\r\n\r\ninterface IPoll {\r\n  id: number;\r\n  appraisal_target_id: number;\r\n  isOver: boolean;\r\n  user_name: string;\r\n  user_position: string;\r\n  login: string;\r\n  email: string;\r\n}\r\n\r\ninterface IProps {\r\n  input: string;\r\n  setInput: (input: string) => void;\r\n}\r\n\r\nconst SelectPollContainer = (props: IProps) => {\r\n  const {request} = useHttp();\r\n  const [polls, setPolls] = useState([])\r\n  const [filteredPolls, setFilteredPolls] = useState([]);\r\n  useEffect(() => {\r\n    request('/api/polls/admin', \"GET\").then((res) => {\r\n      setPolls(res);\r\n      setFilteredPolls(res);\r\n    }).catch(e => console.log(e));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(props.input){\r\n      setFilteredPolls(polls.filter((poll: IPoll) => {\r\n        return poll.id.toString() === props.input || poll.user_name.includes(props.input) ||\r\n          poll.user_position.includes(props.input) || poll.login.includes(props.input) ||\r\n          poll.email.includes(props.input);\r\n      }));\r\n    }\r\n  }, [props.input]);\r\n\r\n  return(\r\n    <SelectPoll\r\n      input={props.input}\r\n      polls={filteredPolls}\r\n      setInput={props.setInput}\r\n    />\r\n  )\r\n}\r\n\r\nexport default SelectPollContainer;","import React from 'react';\r\nimport {IUserInfo} from \"../../../../interfaces/User.types\";\r\nimport {ListGroup, ListGroupItem} from \"react-bootstrap\";\r\nimport {Field} from \"redux-form\";\r\n\r\n\r\nconst SelectInterviewersItem = (props: IUserInfo) => {\r\n  return (\r\n      <tr>\r\n        <td>\r\n          <Field\r\n            component={\"input\"}\r\n            type=\"checkbox\"\r\n            name={`${props.id}`}\r\n            id={`user-${props.id}`}\r\n          />\r\n        </td>\r\n        <td className=\"user-id\">\r\n          <label htmlFor={`user-${props.id}`}>\r\n            {props.id}\r\n          </label>\r\n        </td>\r\n        <td className=\"user-name\">\r\n          <label htmlFor={`user-${props.id}`}>\r\n            {props.user_name}\r\n          </label>\r\n        </td>\r\n        <td className=\"user-pos\">\r\n          <label htmlFor={`user-${props.id}`}>\r\n            {props.user_position}\r\n          </label>\r\n        </td>\r\n        <td className=\"user-login\">\r\n          <label htmlFor={`user-${props.id}`}>\r\n            {props.login}\r\n          </label>\r\n        </td>\r\n        <td className=\"user-email\">\r\n          <label htmlFor={`user-${props.id}`}>\r\n            {props.email}\r\n          </label>\r\n        </td>\r\n        <td className=\"user-admin\">\r\n          <label htmlFor={`user-${props.id}`}>\r\n            {props.isAdmin}\r\n          </label>\r\n        </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default SelectInterviewersItem;","import React from 'react';\r\nimport {IUserInfo} from \"../../../../interfaces/User.types\";\r\nimport SelectInterviewersItem from \"./SelectInterviewersItem\";\r\nimport {Table} from \"react-bootstrap\";\r\n\r\n\r\ninterface IProps {\r\n  users: IUserInfo[];\r\n}\r\n\r\nconst SelectInterviewers = (props: IProps) => {\r\n  return(\r\n    <Table>\r\n      <tbody>\r\n        {props.users.map((user: IUserInfo) => (\r\n          <SelectInterviewersItem\r\n            key={user.id}\r\n            id={user.id}\r\n            user_name={user.user_name}\r\n            user_position={user.user_position}\r\n            isAdmin={user.isAdmin}\r\n            login={user.login}\r\n            email={user.email}\r\n          />\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  )\r\n}\r\n\r\nexport default SelectInterviewers;","import React, {useEffect, useState} from 'react';\r\nimport SelectInterviewers from \"./SelectInterviewers\";\r\nimport useHttp from \"../../../../assets/hooks/http\";\r\n\r\n\r\nconst SelectInterviewersContainer = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const {request} = useHttp();\r\n\r\n\r\n  useEffect(() => {\r\n    request('/api/users/', \"GET\").then((res) => {\r\n      setUsers(res)\r\n    }).catch(e => console.log(e));\r\n  }, [])\r\n\r\n  return(\r\n    <SelectInterviewers\r\n      users={users}\r\n    />\r\n  )\r\n}\r\n\r\nexport default SelectInterviewersContainer;","import React from 'react';\r\nimport SelectPollContainer from \"./polls/SelectPoll.container\";\r\nimport {ListGroup, ListGroupItem} from \"react-bootstrap\";\r\nimport SelectInterviewersContainer from \"./users/SelectInterviewers.container\";\r\nimport {Form, reduxForm} from \"redux-form\";\r\n\r\n\r\n// interface IProps {\r\n//   input: string;\r\n//   setInput: (input: string) => void;\r\n// }\r\n\r\nconst AdminAddInterviewer = (props) => {\r\n  return (\r\n    <div>\r\n      <Form onSubmit={props.handleSubmit}>\r\n        <ListGroup>\r\n          <div>\r\n            <ListGroupItem>\r\n              <button className={\"btn btn-warning\"}>\r\n                Добавить интервьюверов\r\n              </button>\r\n            </ListGroupItem>\r\n            <ListGroupItem>\r\n              <SelectPollContainer\r\n                input={props.input}\r\n                setInput={props.setInput}\r\n              />\r\n            </ListGroupItem>\r\n            <ListGroupItem>\r\n              <SelectInterviewersContainer/>\r\n            </ListGroupItem>\r\n          </div>\r\n        </ListGroup>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default reduxForm({form: \"add-interviewers\"})(AdminAddInterviewer);","import React, {useState} from 'react';\r\nimport AdminAddInterviewer from \"./AdminAddInterviewer\";\r\nimport useHttp from \"../../../assets/hooks/http\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst AdminAddInterviewerContainer = () => {\r\n  const {request} = useHttp();\r\n  const [input, setInput] = useState(\"\");\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  const data: any = {\r\n    input,\r\n    setInput\r\n  };\r\n\r\n  const handleSubmit = async (form) => {\r\n    try {\r\n      const polls = form.polls;\r\n      delete form.polls;\r\n      for(let key in form){\r\n        if(form[key] === false){\r\n          delete form[key];\r\n        }\r\n      }\r\n      await request(\r\n        '/api/polls/admin/interviewers',\r\n        \"POST\",\r\n        {polls, userId: Object.keys(form)\r\n        });\r\n      setRedirect(true);\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  if(redirect){\r\n    return <Redirect to={\"/\"} />\r\n  }\r\n\r\n  return(\r\n    <AdminAddInterviewer\r\n      {...data}\r\n      onSubmit={handleSubmit}\r\n    />\r\n  )\r\n}\r\n\r\nexport default AdminAddInterviewerContainer;","export default __webpack_public_path__ + \"static/media/user.33e7df09.png\";","import React from \"react\";\r\nimport {Col, Image} from \"react-bootstrap\";\r\nimport classes from './Info.module.css';\r\nimport image from '../../../../../assets/images/user.png';\r\n\r\n\r\ninterface IProps {\r\n  name: string;\r\n  position: string;\r\n}\r\n\r\nconst Info = (props: IProps) => {\r\n  return(\r\n    <div className={classes.block}>\r\n      <div className={classes.profile}>\r\n        <div>\r\n          <Col>\r\n            <Image roundedCircle src={image} width='100px' height='100px' />\r\n          </Col>\r\n        </div>\r\n        <div className={classes.info}>\r\n          <div className=\"fw-bold s22\">{props.name}</div>\r\n          <div className=\"s18\">{props.position}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Info;","import React from 'react';\r\nimport Info from \"./Info\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ReducersType} from \"../../../../../store/store\";\r\n\r\n\r\n\r\nconst InfoContainer = () => {\r\n  const user = useSelector((state: ReducersType) => state.user.user.info);\r\n  return(\r\n    <Info\r\n      name={user.login}\r\n      position={user.user_position}\r\n    />\r\n  )\r\n}\r\n\r\nexport default InfoContainer;","import React from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst GoToPolls = () => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        У вас есть непройденные опросы\r\n      </div>\r\n      <div>\r\n        <Link to={'/polls'}>\r\n          <Button variant=\"warning\">\r\n            Перейти к опросам\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GoToPolls;","import React from 'react';\r\nimport InfoContainer from \"./info/Info.container\";\r\nimport {ListGroup} from \"react-bootstrap\";\r\nimport GoToPolls from \"./go-to-polls/GoToPolls\";\r\nimport classes from \"./Profile.module.css\";\r\n\r\n\r\ninterface IProps {\r\n  havePolls: number;\r\n}\r\n\r\nconst Profile = (props: IProps) => {\r\n  return(\r\n    <div className={`text-dark ${classes.profile}`}>\r\n      <ListGroup>\r\n        <ListGroup.Item>\r\n          <InfoContainer />\r\n        </ListGroup.Item>\r\n        <ListGroup.Item>\r\n          {props.havePolls ?\r\n            <GoToPolls /> :\r\n            <div>\r\n              У вас нет опросов для дачи оценки\r\n            </div>\r\n          }\r\n        </ListGroup.Item>\r\n      </ListGroup>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ReducersType} from \"../../../../store/store\";\r\n\r\n\r\nconst ProfileContainer = () => {\r\n  const havePolls = useSelector((state: ReducersType) => state.pools.polls.length);\r\n  return(\r\n    <Profile\r\n      havePolls={havePolls}\r\n    />\r\n  )\r\n}\r\n\r\nexport default ProfileContainer;\r\n\r\n","import React from 'react';\r\nimport {ICompetence} from \"../../../../interfaces/User.types\";\r\nimport classes from \"./Appraisal.module.css\";\r\n\r\n\r\nconst Competence = (props: ICompetence) => {\r\n  return(\r\n    <div className={classes.competence}>\r\n      <span className=\"s34 bold\">{props.competence}: </span>\r\n      <span className=\"s22\">{props.result}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Competence;","import React from 'react';\r\nimport {ICompetence} from \"../../../../interfaces/User.types\";\r\nimport Competence from \"./Competence\";\r\nimport classes from \"./Appraisal.module.css\";\r\nimport {Card} from \"react-bootstrap\";\r\n\r\n\r\ninterface IProps {\r\n  comptences: ICompetence[]\r\n}\r\n\r\nconst Appraisal = (props: IProps) => {\r\n  return(\r\n    <div className={classes.appraisal}>\r\n      <div className={classes.competences}>\r\n        {props.comptences.map((comp: ICompetence) => (\r\n          <Competence\r\n            key={comp.id}\r\n            id={comp.id}\r\n            competence={comp.competence}\r\n            result={comp.result}\r\n          />\r\n        ))}\r\n      </div>\r\n      <Card className={`${classes.info} s22`}>\r\n        <Card.Text className={classes.text}>\r\n          Чем ближе параметр компетенции к единице, тем лучше вас оценивают в этой компетенции\r\n        </Card.Text>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Appraisal;","import React, {useEffect} from 'react';\r\nimport Appraisal from \"./Appraisal\";\r\nimport useHttp from \"../../../../assets/hooks/http\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ReducersType} from \"../../../../store/store\";\r\nimport {setCompetenceAC} from \"../../../../store/user-reducer\";\r\n\r\n\r\nconst AppraisalContainer = () => {\r\n  const user_id = useSelector((state: ReducersType) => state.user.user.info.id);\r\n  const competences = useSelector((state: ReducersType) => state.user.user.competences);\r\n  const {request} = useHttp();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    request(\"/api/users/results\", \"POST\", {user_id}).then(res => {\r\n      dispatch(setCompetenceAC(res));\r\n    });\r\n  }, []);\r\n\r\n  return(\r\n    <Appraisal comptences={competences} />\r\n  )\r\n}\r\n\r\nexport default AppraisalContainer;","import React from 'react';\r\nimport {Tab, Tabs} from \"react-bootstrap\";\r\nimport ProfileContainer from \"./profile/Profile.container\";\r\nimport AppraisalContainer from \"./appraisal/Appraisal.container\";\r\n\r\n\r\nconst ProfilePage = () => {\r\n  return(\r\n    <div>\r\n      <Tabs defaultActiveKey=\"profile\">\r\n        <Tab eventKey=\"profile\" title={\"Профиль\"}>\r\n          <ProfileContainer />\r\n        </Tab>\r\n        <Tab eventKey=\"appraisal\" title={\"Оценки\"}>\r\n          <AppraisalContainer />\r\n        </Tab>\r\n      </Tabs>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfilePage;","import React from 'react';\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Main from \"../main/Main\";\r\nimport PollsContainer from \"../polls/Polls.container\";\r\nimport UsersContainer from \"../../admin/users/Users.container\";\r\nimport Registration from \"../../admin/registration/Registr\";\r\nimport PollContainer from \"../polls/poll/Poll.container\";\r\nimport AdminPollsContainer from \"../../admin/polls/Polls.container\";\r\nimport AdminAddPollContainer from \"../../admin/add-poll/AddPoll.container\";\r\nimport AdminAddInterviewerContainer from \"../../admin/add-interviewers/AdminAddInterviewer.container\";\r\nimport ProfilePage from \"../profile/ProfilePage\";\r\n\r\n\r\nconst AdminRouter = () => {\r\n  return(\r\n    <Switch>\r\n      <Route render={() => <Main /> } path='/' exact/>\r\n      <Route render={() => <PollsContainer /> } path='/polls' exact/>\r\n      <Route render={() => <PollContainer />} path={'/poll'} exact />\r\n      <Route render={() => <ProfilePage /> } path='/profile' exact />\r\n      <Route render={() => <Registration /> } path='/admin/registration' exact />\r\n      <Route render={() => <UsersContainer /> } path='/admin/users' exact />\r\n      <Route render={() => <AdminPollsContainer /> } path='/admin/polls' exact />\r\n      <Route render={() => <AdminAddPollContainer /> } path='/admin/add-poll' exact />\r\n      <Route render={() => <AdminAddInterviewerContainer /> } path='/admin/add-interviewer' exact />\r\n      <Redirect to={\"/\"} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default AdminRouter;","import React from 'react';\r\nimport {Form, reduxForm, Field} from \"redux-form\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport classes from \"../Login.module.css\";\r\nimport {minLengthCreator, required} from \"../../../../assets/validators/validators\";\r\nimport {Input} from \"../../../form-controls/FormControls\";\r\n\r\n\r\nconst minLength = minLengthCreator(6);\r\n\r\nconst LoginForm = (props) => {\r\n  return(\r\n      <Form onSubmit={props.handleSubmit}>\r\n        <div className={classes.field}>\r\n          <Field\r\n            name=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"Введите почту\"\r\n            component={Input}\r\n            validate={[required]}\r\n          />\r\n        </div>\r\n        <div className={classes.field}>\r\n          <Field\r\n            name=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"Введите пароль\"\r\n            component={Input}\r\n            type=\"password\"\r\n            validate={[required, minLength]}\r\n          />\r\n        </div>\r\n        <div className={classes.field}>\r\n          <Button variant=\"warning\" type=\"submit\">\r\n            Войти\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({form: \"login\"})(LoginForm);","import React from 'react';\r\nimport LoginForm from \"./LoginForm\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {login, setToken, setUser} from \"../../../../store/user-reducer\";\r\nimport useHttp from \"../../../../assets/hooks/http\";\r\n\r\n\r\nconst LoginFormContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const {request} = useHttp();\r\n  const handlerSubmit = async (form) => {\r\n    try{\r\n      const data = await request('/api/auth/login', \"POST\", {...form});\r\n      dispatch(setToken(data.token));\r\n      dispatch(setUser(data.userInfo));\r\n      localStorage.setItem(\"userInfo\", JSON.stringify({\r\n        userInfo: data.userInfo, token: data.token\r\n      }));\r\n    } catch (e) {\r\n\r\n    }\r\n    // console.log(data);\r\n    // dispatch(login(data.email, data.password));\r\n  }\r\n\r\n  return(\r\n    <LoginForm\r\n      onSubmit={handlerSubmit}\r\n    />\r\n  )\r\n}\r\n\r\nexport default LoginFormContainer;","import React from 'react';\r\nimport {Card, ListGroup} from \"react-bootstrap\";\r\nimport LoginFormContainer from \"./forms/LoginForm.container\";\r\nimport classes from \"./Login.module.css\";\r\n\r\n\r\nconst Login = () => {\r\n  return(\r\n    <Card className={classes.login}>\r\n      <ListGroup>\r\n        <ListGroup.Item className=\"fw-bold s22\">\r\n          Войдите в аккаунт\r\n        </ListGroup.Item>\r\n        <ListGroup.Item>\r\n          <LoginFormContainer />\r\n        </ListGroup.Item>\r\n      </ListGroup>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Main from \"../main/Main\";\r\nimport PollsContainer from \"../polls/Polls.container\";\r\nimport Login from \"../login/Login\";\r\nimport PollContainer from \"../polls/poll/Poll.container\";\r\nimport ProfilePage from \"../profile/ProfilePage\";\r\n\r\n\r\ninterface IProps {\r\n  session: boolean;\r\n}\r\n\r\nconst UserRouter = (props: IProps) => {\r\n  if(props.session){\r\n    return(\r\n      <Switch>\r\n        <Route render={() => <Main /> } path='/' exact/>\r\n        <Route render={() => <PollsContainer /> } path='/polls' exact/>\r\n        <Route render={() => <PollContainer />} path={'/poll'} exact />\r\n        <Route render={() => <ProfilePage /> } path='/profile' exact/>\r\n        <Redirect to={\"/\"} />\r\n      </Switch>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Switch>\r\n      <Route render={() => <Main /> } path='/' exact/>\r\n      <Route render={() => <PollsContainer /> } path='/polls' exact/>\r\n      <Route render={() => <Login /> } path='/login' exact />\r\n      <Redirect to={\"/\"} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default UserRouter;","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {ReducersType} from \"../../../store/store\";\r\nimport UserRouter from \"./UserRouter\";\r\n\r\n\r\nconst UserRouterContainer = () => {\r\n  const session = useSelector((state: ReducersType) => state.user.user.isIn);\r\n  return(\r\n    <UserRouter session={session} />\r\n  )\r\n}\r\n\r\nexport default UserRouterContainer;","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {ReducersType} from \"../../../store/store\";\r\nimport AdminRouter from \"./AdminRouter\";\r\nimport UserRouterContainer from \"./UserRouter.container\";\r\n\r\n\r\nconst Router = () => {\r\n  const isAdmin: boolean = useSelector((state: ReducersType) => state.user.user.info.isAdmin);\r\n  if(isAdmin){\r\n    return <AdminRouter />\r\n  }\r\n\r\n  return <UserRouterContainer />\r\n}\r\n\r\nexport default Router","import React from 'react'\r\nimport classes from \"./Content.module.css\";\r\nimport Router from \"./router/Router\";\r\n\r\n\r\ninterface IProps {\r\n  // initialized: boolean;\r\n}\r\n\r\nconst Content = (props: IProps) => {\r\n  return (\r\n    <main className={`${classes.content} content`}>\r\n      <div>\r\n        <Router/>\r\n      </div>\r\n      {/*{props.initialized ? <Router /> : <Preloader />}*/}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Content;","\r\n\r\nconst initialState = {\r\n  initialized: false\r\n}\r\n\r\ntype TState = typeof initialState;\r\ntype TAppActions = ReturnType<typeof initializedSuccess>;\r\n\r\nconst appReducer = (state: TState = initialState, action: TAppActions) => {\r\n  switch (action.type) {\r\n    case \"INITIALIZED-SUCCESS\": {\r\n      return {...state, initialized: true}\r\n    }\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: \"INITIALIZED-SUCCESS\"} as const);\r\n\r\nexport default appReducer;","import React, {useEffect} from 'react';\r\nimport Content from \"./Contents\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {login} from \"../../store/user-reducer\";\r\nimport {initializedSuccess} from \"../../store/app-reducer\";\r\nimport {ReducersType} from \"../../store/store\";\r\nimport {setPollsAC} from \"../../store/pools-reducer\";\r\nimport useHttp from \"../../assets/hooks/http\";\r\n\r\n\r\nconst ContentContainer = () => {\r\n  const {request} = useHttp();\r\n  const userId = useSelector((state: ReducersType) => state.user.user.info.id);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    if (data && data.token) {\r\n      dispatch(login(data.token, data.userInfo));\r\n      dispatch(initializedSuccess());\r\n    }\r\n    initializedSuccess();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(userId !== 0){\r\n      request('/api/polls/', \"POST\", {userId}).then(res => {\r\n        dispatch(setPollsAC(res));\r\n      });\r\n    }\r\n  }, [userId])\r\n\r\n  return(\r\n    <Content\r\n    />\r\n  )\r\n}\r\n\r\nexport default ContentContainer;","import React from 'react';\nimport './App.css';\nimport Header from \"./components/header/Header\";\nimport Footer from \"./components/footer/Footer\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport ContentContainer from \"./components/content/Contents.container\";\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App body\">\n        <Header />\n        <ContentContainer />\n        <Footer />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport userReducer from \"./user-reducer\";\r\nimport poolsReducer from \"./pools-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nconst reducers = combineReducers({\r\n  form: formReducer,\r\n  user: userReducer,\r\n  pools: poolsReducer,\r\n  app: appReducer\r\n})\r\n\r\nexport type ReducersType = ReturnType<typeof reducers>\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\ndeclare global {\r\n  interface Window {\r\n    store:any;\r\n  }\r\n}\r\n\r\nwindow.store = store\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css'\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"collapse_button\":\"Collapse_collapse_button__2APOa\",\"button\":\"Collapse_button__T-YGp\",\"span\":\"Collapse_span__2v1Jg\",\"admin\":\"Collapse_admin__1z0qS\",\"collapse_nav\":\"Collapse_collapse_nav__3hzfr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registr\":\"Registr_registr__NbSWS\",\"input\":\"Registr_input__MU0H6\",\"button\":\"Registr_button__oxUai\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"competences\":\"Appraisal_competences__37Bto\",\"competence\":\"Appraisal_competence__2eg_A\",\"appraisal\":\"Appraisal_appraisal__22YkB\",\"info\":\"Appraisal_info__3wQUd\",\"text\":\"Appraisal_text__1R78t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__1HP9H\",\"field\":\"Login_field__1sSdH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1zGJy\",\"collapse\":\"Navbar_collapse__37ZkY\",\"container\":\"Navbar_container__1FxsJ\",\"usernav\":\"Navbar_usernav__2iXXq\",\"profile\":\"Navbar_profile__3oOdM\",\"brand\":\"Navbar_brand__rZN41\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2g1h4\",\"el\":\"Footer_el__BBHzk\",\"block\":\"Footer_block__3TjAA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"CompetenceMainPage_text__EDDKi\",\"list\":\"CompetenceMainPage_list__26sG2\",\"competences\":\"CompetenceMainPage_competences__2dfbo\",\"list_competences\":\"CompetenceMainPage_list_competences__2j7n6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"AddPoll_filter__1mYdz\",\"clearFilter\":\"AddPoll_clearFilter__jzUXd\",\"search\":\"AddPoll_search__rF7s6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Info_profile__1Ewko\",\"block\":\"Info_block__3vfqB\",\"info\":\"Info_info__TMzu3\"};"],"sourceRoot":""}