{"version":3,"sources":["components/content/main/welcome/Welcome.module.css","components/content/main/metod/Metod.module.css","components/header/nav/logout/Logout.module.css","components/footer/three/FooterNav.module.css","components/content/Content.module.css","components/content/polls/Polls.module.css","components/content/polls/PoolLink.module.css","components/admin/users/Users.module.css","components/admin/polls/AdminPolls.module.css","components/admin/add-interviewers/polls/SelectPoll.module.css","components/content/profile/profile/Profile.module.css","components/header/nav/logout/Logout.tsx","store/user-reducer.ts","components/header/nav/logout/Logout.container.tsx","components/header/nav/admin-nav/AdminNav.tsx","components/header/nav/admin-nav/AdminNav.container.tsx","components/header/nav/Navbar.tsx","components/header/nav/NavbarComp.container.tsx","components/header/Header.tsx","components/footer/three/FooterNav.tsx","components/footer/three/FooterNav.container.tsx","components/footer/Footer.tsx","assets/images/slider/1.jpg","assets/images/slider/2.jpg","assets/images/slider/3.jpg","components/content/main/welcome/Slider.tsx","components/content/main/welcome/Welcome.tsx","components/content/main/metod/Metod.tsx","components/content/main/competence/CompetencesMainPage.tsx","components/content/main/Main.tsx","components/content/polls/PollMessage.tsx","components/content/polls/PoolLink.tsx","store/pools-reducer.ts","components/content/polls/PollLink.container.tsx","components/content/polls/Polls.tsx","assets/hooks/http.ts","components/content/polls/Polls.container.tsx","components/admin/users/User.tsx","components/admin/users/Users.tsx","assets/hocs/ClosedAccess.tsx","components/admin/users/Users.container.tsx","components/form-controls/FormControls.tsx","assets/validators/validators.ts","components/admin/registration/form/RegistrForm.tsx","components/admin/registration/form/RegistrForm.container.tsx","components/admin/registration/Registr.tsx","components/content/polls/poll/AnswerOpt.tsx","components/content/polls/poll/Question.tsx","components/content/polls/poll/Poll.tsx","components/content/polls/poll/Poll.container.tsx","components/admin/polls/poll/Poll.tsx","components/admin/polls/Polls.tsx","components/admin/polls/Polls.container.tsx","components/admin/add-poll/form/AddPollForm.tsx","components/admin/add-poll/user-list/UserListItem.tsx","components/admin/add-poll/user-list/UserList.tsx","components/admin/add-poll/user-list/UserList.container.tsx","components/admin/add-poll/AddPoll.tsx","components/admin/add-poll/AddPoll.container.tsx","components/admin/add-interviewers/polls/form/SelectPollInput.tsx","components/admin/add-interviewers/polls/list/SelectPollListItem.tsx","components/admin/add-interviewers/polls/list/SelectPollList.tsx","components/admin/add-interviewers/polls/SelectPoll.tsx","components/admin/add-interviewers/polls/SelectPoll.container.tsx","components/admin/add-interviewers/users/SelectInterviewersItem.tsx","components/admin/add-interviewers/users/SelectInterviewers.tsx","components/admin/add-interviewers/users/SelectInterviewers.container.tsx","components/admin/add-interviewers/AdminAddInterviewer.tsx","components/admin/add-interviewers/AdminAddInterviewer.container.tsx","assets/images/user.png","components/content/profile/profile/info/Info.tsx","components/content/profile/profile/info/Info.container.tsx","components/content/profile/profile/go-to-polls/GoToPolls.tsx","components/content/profile/profile/Profile.tsx","components/content/profile/profile/Profile.container.tsx","components/content/profile/appraisal/Competence.tsx","components/content/profile/appraisal/Appraisal.tsx","components/content/profile/appraisal/Appraisal.container.tsx","components/content/profile/ProfilePage.tsx","components/content/router/AdminRouter.tsx","components/content/login/forms/LoginForm.tsx","components/content/login/forms/LoginForm.container.tsx","components/content/login/Login.tsx","components/content/router/UserRouter.tsx","components/content/router/UserRouter.container.tsx","components/content/router/Router.tsx","components/content/Contents.tsx","store/app-reducer.tsx","components/content/Contents.container.tsx","App.tsx","reportWebVitals.ts","store/store.ts","index.tsx","components/admin/registration/Registr.module.css","components/content/profile/appraisal/Appraisal.module.css","components/content/login/Login.module.css","components/footer/Footer.module.css","components/content/main/competence/CompetenceMainPage.module.css","components/header/nav/Navbar.module.css","components/admin/add-poll/AddPoll.module.css","components/content/profile/profile/info/Info.module.css"],"names":["module","exports","Logout","props","Nav","Link","className","classes","logout","onClick","handleClick","initialState","user","isIn","token","info","id","user_name","user_position","isAdmin","login","email","competences","setInAC","type","setUserInfoAC","setToken","setUser","dispatch","userReducer","state","action","LogoutContainer","useDispatch","session","useSelector","console","log","AdminNav","NavDropdown","title","Item","to","AdminNavContainer","NavbarComp","Navbar","bg","variant","navbar","usernav","Brand","href","profile","NavbarCompContainer","useEffect","Header","React","memo","FooterNav","container","FooterNavContainer","Footer","footer","block","el","Slider","Carousel","src","image_one","alt","Caption","image_two","image_three","Welcome","ListGroup","text","Metod","metod","metod_info","CompetenceMainPage","horizontal","ListGroupItem","list","list_competences","Main","PollMessage","PoolLink","item","pathname","search","inter_id","Button","polls","questions","currentPoll","poolsReducer","filter","poll","pollID","setPollsAC","PollLinkContainer","setCurrentPoll","setCurrentPollAC","Polls","Card","Body","polls_container","pools","map","prop","userInfo","useHttp","useState","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","res","json","data","ok","Error","message","clearError","PollsContainer","userId","then","User","Users","users","withClosedAccess","Component","setUsers","catch","e","ErrorMessage","FormControl","input","meta","touched","children","hasError","Input","restProps","child","required","value","minLengthCreator","minLength","length","minName","minPos","minPassword","maxLength","maxLengthCreator","reduxForm","form","Form","onSubmit","handleSubmit","Field","name","placeholder","component","validate","RegistrationFormContainer","redirect","setRedirect","registr","AnswerOpts","htmlFor","Question","question","AnswerOpt","quest","errorMessage","withRouter","setErrorMessage","setQuestionsAC","Object","keys","answers","Array","from","poll_id","URLSearchParams","location","get","AdminPollItem","appraisal_target_id","isOver","AdminPollsContainer","setPolls","AddPollForm","onChange","setInput","target","usersFilter","clearFilter","UserListItem","UserListContainer","AdminAddPoll","AdminAddPollContainer","toString","includes","SelectPollInput","SelectPollListItem","SelectPollList","SelectPoll","SelectPollContainer","filteredPolls","setFilteredPolls","SelectInterviewersItem","SelectInterviewers","SelectInterviewersContainer","AdminAddInterviewerContainer","key","Info","Col","Image","roundedCircle","image","width","height","position","InfoContainer","GoToPolls","Profile","havePolls","ProfileContainer","Competence","competence","result","Appraisal","appraisal","comptences","comp","Text","AppraisalContainer","user_id","setCompetenceAC","ProfilePage","Tabs","defaultActiveKey","Tab","eventKey","AdminRouter","render","path","exact","Registr","field","LoginFormContainer","handlerSubmit","localStorage","setItem","Login","UserRouter","UserRouterContainer","Router","Content","content","initialized","appReducer","ContentContainer","parse","getItem","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f87010a4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Welcome_block__1dkTX\",\"text\":\"Welcome_text__6MVU6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"metod\":\"Metod_metod__Y1pd2\",\"metod_info\":\"Metod_metod_info__2qHdC\",\"metod_image\":\"Metod_metod_image__1MxSC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logout\":\"Logout_logout__2Dsbf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FooterNav_container__1eusv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content_content__1fQJY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"polls_container\":\"Polls_polls_container__11e5P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"PoolLink_item__29Y6f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"Users_user__10xLc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"poll\":\"AdminPolls_poll__34WS4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SelectPoll_input__2P8_y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dWbm\"};","import React from 'react';\r\nimport {Nav} from \"react-bootstrap\";\r\nimport classes from \"./Logout.module.css\";\r\n\r\n\r\ninterface IProps {\r\n  handleClick: () => void;\r\n}\r\n\r\nconst Logout = (props: IProps) => {\r\n  return(\r\n    <Nav.Link className={classes.logout}>\r\n      <button className=\"text-light\" onClick={props.handleClick}>\r\n        Выйти\r\n      </button>\r\n    </Nav.Link>\r\n  )\r\n}\r\n\r\nexport default Logout;","import {ICompetence, IUserInfo} from \"../interfaces/User.types\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\nconst initialState = {\r\n  user:{\r\n    isIn: false,\r\n    token: null,\r\n    info: {\r\n      id: 0,\r\n      user_name: \"\",\r\n      user_position: '',\r\n      isAdmin: false,\r\n      login: '',\r\n      email: \"\"\r\n    },\r\n    competences: []\r\n  }\r\n}\r\n\r\ntype TState = typeof initialState;\r\ntype UserActionsType = ReturnType<typeof setInAC> | ReturnType<typeof setToken> |\r\n  ReturnType<typeof setUserInfoAC> | ReturnType<typeof setCompetenceAC>\r\n\r\nconst userReducer = (state: TState = initialState, action: UserActionsType) => {\r\n  switch (action.type) {\r\n    case \"SET-IN\": {\r\n      return {...state, user: {...state.user, isIn: action.isIn}}\r\n    }\r\n    case \"SET-USER-INFO\": {\r\n      return {...state, user: {...state.user, info: action.info}}\r\n    }\r\n    case \"SET-TOKEN\": {\r\n      return {...state, user: {...state.user, token: action.token}}\r\n    }\r\n    case \"SET-COMPETENCES\": {\r\n      return {...state, user: {...state.user, competences: action.competences}}\r\n    }\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport const setInAC = (isIn: boolean) => ({type: \"SET-IN\", isIn} as const);\r\nexport const setUserInfoAC = (info: IUserInfo) => ({type: \"SET-USER-INFO\", info} as const);\r\nexport const setToken = (token) => ({type: \"SET-TOKEN\", token} as const);\r\nexport const setCompetenceAC = (competences: ICompetence[]) => ({type: \"SET-COMPETENCES\", competences} as const);\r\n\r\n\r\nexport const setUser = (info: IUserInfo) => (dispatch: Dispatch<UserActionsType>) => {\r\n  dispatch(setInAC(true));\r\n  dispatch(setUserInfoAC(info));\r\n}\r\nexport const logout = () => (dispatch: Dispatch<UserActionsType>) => {\r\n  dispatch(setInAC(false));\r\n  dispatch(setUserInfoAC({\r\n    id: 0,\r\n    user_name: \"\",\r\n    user_position: '',\r\n    isAdmin: false,\r\n    login: '',\r\n    email: \"\"\r\n  }))\r\n}\r\n\r\n// export const authentication = (id: number) => (dispatch: any) => {\r\n//   return authAPI.getMe(id).then((res: AxiosResponse) => {\r\n//     if(res.status === 0){\r\n//       const {id, user_name, user_position, isAdmin, login, email} = res.data;\r\n//       dispatch(setUser({id, user_name, user_position, isAdmin, login, email}));\r\n//     }\r\n//   });\r\n// }\r\n\r\nexport const login = (token: string, userInfo: any) => (dispatch: any) => {\r\n  dispatch(setToken(token));\r\n  dispatch(setUserInfoAC(userInfo));\r\n  dispatch(setInAC(true));\r\n\r\n}\r\n\r\n// export const registration = (email: string, password: string) => (dispatch) => {\r\n//   // console.log(\"You here\", email, password)\r\n//   // authAPI.postRegistr(email, password).then((res: AxiosResponse) => {\r\n//   //   console.log(res);\r\n//   // });\r\n// }\r\n\r\nexport default userReducer;","import React from 'react';\r\nimport Logout from \"./Logout\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {logout} from \"../../../../store/user-reducer\";\r\nimport {ReducersType} from \"../../../../store/store\";\r\n\r\n\r\nconst LogoutContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const session = useSelector((state: ReducersType) => state.user.user.isIn)\r\n\r\n  const handleClick = () => {\r\n    dispatch(logout());\r\n    console.log(session);\r\n  }\r\n\r\n  return(\r\n    <Logout\r\n      handleClick={handleClick}\r\n    />\r\n  )\r\n}\r\n\r\nexport default LogoutContainer;","import React from 'react';\r\nimport {NavDropdown} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst AdminNav = () => {\r\n  return(\r\n    <NavDropdown title=\"Панель администратора\" id=\"admin-panel\">\r\n      <NavDropdown.Item>\r\n        <Link to=\"/admin/registration\">\r\n          Добавить пользователя\r\n        </Link>\r\n      </NavDropdown.Item>\r\n      <NavDropdown.Item>\r\n        <Link to=\"/admin/users\">\r\n          Список пользователей\r\n        </Link>\r\n      </NavDropdown.Item>\r\n      <NavDropdown.Item>\r\n        <Link to=\"/admin/polls\">\r\n          Список опросов\r\n        </Link>\r\n      </NavDropdown.Item>\r\n      <NavDropdown.Item>\r\n        <Link to=\"/admin/add-poll\">\r\n          Выбрать цель опроса\r\n        </Link>\r\n      </NavDropdown.Item>\r\n      <NavDropdown.Item>\r\n        <Link to=\"/admin/add-interviewer\">\r\n          Выбрать проходящих опрос\r\n        </Link>\r\n      </NavDropdown.Item>\r\n    </NavDropdown>\r\n  )\r\n}\r\n\r\nexport default AdminNav;","import React from 'react';\r\nimport AdminNav from \"./AdminNav\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ReducersType} from \"../../../../store/store\";\r\n\r\n\r\nconst AdminNavContainer = () => {\r\n  const isAdmin: boolean = useSelector((state: ReducersType) => state.user.user.info.isAdmin);\r\n  if(isAdmin){\r\n    return(\r\n      <AdminNav />\r\n    )\r\n  }\r\n  return <></>\r\n}\r\n\r\nexport default AdminNavContainer;","import React from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport classes from './Navbar.module.css'\r\nimport {Link} from \"react-router-dom\";\r\nimport LogoutContainer from \"./logout/Logout.container\";\r\nimport AdminNavContainer from \"./admin-nav/AdminNav.container\";\r\n\r\n\r\ninterface IProps {\r\n  isIn: boolean;\r\n}\r\n\r\nconst NavbarComp = (props: IProps) =>{\r\n  return(\r\n    <Navbar bg='success' variant=\"dark\" className={classes.navbar}>\r\n      <div className={classes.usernav}>\r\n        <Navbar.Brand href=\"/\">\r\n          <Link to=\"/home\" className=\"text-light\">\r\n            360\r\n          </Link>\r\n        </Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link>\r\n            <Link to={\"/\"} className=\"text-light\">\r\n              Главная\r\n            </Link>\r\n          </Nav.Link>\r\n          <Nav.Link>\r\n            <Link to={\"/polls\"} className=\"text-light\">\r\n              Опросы\r\n            </Link>\r\n          </Nav.Link>\r\n          {props.isIn ?\r\n            <div className={classes.profile}>\r\n              <Nav.Link>\r\n                <Link to={\"/profile\"} className=\"text-light\">\r\n                  Профиль\r\n                </Link>\r\n              </Nav.Link>\r\n              <LogoutContainer />\r\n            </div>\r\n            :\r\n            <Nav.Link>\r\n              <Link to={\"/login\"} className=\"text-light\">\r\n                Войти\r\n              </Link>\r\n            </Nav.Link>\r\n          }\r\n        </Nav>\r\n      </div>\r\n      <Nav>\r\n        <AdminNavContainer />\r\n      </Nav>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default NavbarComp;","import React, {useEffect} from 'react';\r\nimport NavbarComp from \"./Navbar\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ReducersType} from \"../../../store/store\";\r\n\r\n\r\nconst NavbarCompContainer = () => {\r\n  const isIn = useSelector((state: ReducersType) => state.user.user.isIn);\r\n  useEffect(() => {\r\n\r\n  }, [isIn])\r\n  return(\r\n    <NavbarComp\r\n      isIn={isIn}\r\n    />\r\n  )\r\n}\r\n\r\nexport default NavbarCompContainer;","import React from 'react';\r\nimport NavbarCompContainer from \"./nav/NavbarComp.container\";\r\n\r\n\r\nconst Header = React.memo(() => {\r\n  return(\r\n    <header>\r\n      <NavbarCompContainer />\r\n    </header>\r\n  )\r\n})\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport classes from \"./FooterNav.module.css\";\r\n\r\n\r\ninterface IProps {\r\n  isIn: boolean;\r\n}\r\n\r\nconst FooterNav = (props: IProps) => {\r\n  return(\r\n    <div className={classes.container}>\r\n      <div>\r\n        <Link to={\"/home\"} className={\"text-light\"}>\r\n          Главная\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <Link to={\"/polls\"} className={\"text-light\"}>\r\n          Опросы\r\n        </Link>\r\n      </div>\r\n      {props.isIn ?\r\n        <div>\r\n          <Link to={\"/profile\"} className={\"text-light\"}>\r\n            Профиль\r\n          </Link>\r\n        </div>\r\n        :\r\n        <div>\r\n          <Link to={\"/login\"} className={\"text-light\"}>\r\n            Войти\r\n          </Link>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FooterNav;","import React from 'react';\r\nimport FooterNav from \"./FooterNav\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ReducersType} from \"../../../store/store\";\r\n\r\n\r\nconst FooterNavContainer = () =>{\r\n  const isIn = useSelector((state: ReducersType) => state.user.user.isIn);\r\n  return(\r\n    <FooterNav\r\n      isIn={isIn}\r\n    />\r\n  )\r\n}\r\n\r\nexport default FooterNavContainer;","import React from 'react';\r\nimport classes from \"./Footer.module.css\";\r\nimport FooterNavContainer from \"./three/FooterNav.container\";\r\n\r\n\r\nconst Footer = React.memo(() => {\r\n  return(\r\n    <footer className={`${classes.footer} bg-success text-light mt-auto mb-0`}>\r\n      <div className={classes.block}>\r\n        <div className={classes.el}>\r\n          Icons made by&nbsp;\r\n          <a href=\"https://www.freepik.com\"\r\n             title=\"Freepik\"\r\n             className={'text-light'}>Freepik</a> from&nbsp;\r\n          <a\r\n            href=\"https://www.flaticon.com/\"\r\n            title=\"Flaticon\"\r\n            className={'text-light'}>www.flaticon.com</a>\r\n        </div>\r\n        <div className={classes.el}>\r\n\r\n        </div>\r\n        <div className={classes.el}>\r\n          <FooterNavContainer />\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  )\r\n})\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/1.f7886344.jpg\";","export default __webpack_public_path__ + \"static/media/2.aa714752.jpg\";","export default __webpack_public_path__ + \"static/media/3.e801deb7.jpg\";","import React from 'react';\r\nimport {Carousel} from \"react-bootstrap\";\r\nimport image_one from \"./../../../../assets/images/slider/1.jpg\";\r\nimport image_two from \"./../../../../assets/images/slider/2.jpg\";\r\nimport image_three from \"./../../../../assets/images/slider/3.jpg\";\r\n\r\n\r\nconst Slider = () => {\r\n  return(\r\n    <Carousel>\r\n      <Carousel.Item>\r\n        <img\r\n          className=\"d-block w-100 max-h-700\"\r\n          src={image_one}\r\n          alt=\"First slide\"\r\n        />\r\n        <Carousel.Caption>\r\n          <h3>Давайте оценку своим коллегам</h3>\r\n          <p>Оценивайте своих коллег и руководителей чтобы помочь найти им их слабые и сильные стороны</p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <img\r\n          className=\"d-block w-100 max-h-700\"\r\n          src={image_two}\r\n          alt=\"Second slide\"\r\n        />\r\n\r\n        <Carousel.Caption>\r\n          <h3>Полуйте оценку от своих коллег</h3>\r\n          <p>Узнайте о своих сильных и слабых сторон, которые замечают коллеги и руководители</p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <img\r\n          className=\"d-block w-100 max-h-700\"\r\n          src={image_three}\r\n          alt=\"Third slide\"\r\n        />\r\n\r\n        <Carousel.Caption>\r\n          <h3>Давайте все станем немного лучше</h3>\r\n          <p></p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n    </Carousel>\r\n  )\r\n}\r\n\r\nexport default Slider;","import React from 'react';\r\nimport {ListGroup} from \"react-bootstrap\";\r\nimport Slider from \"./Slider\";\r\nimport classes from \"./Welcome.module.css\";\r\n\r\n\r\nconst Welcome = () => {\r\n  return(\r\n    <ListGroup.Item className={classes.block}>\r\n      <div>\r\n        <div className={classes.text}>\r\n          <h3>Проводим опросы для оценивания персонала используя метод 360 градусов</h3>\r\n        </div>\r\n        <div>\r\n          <Slider />\r\n        </div>\r\n      </div>\r\n    </ListGroup.Item>\r\n  )\r\n}\r\n\r\nexport default Welcome;","import React from 'react';\r\nimport classes from \"./Metod.module.css\";\r\n\r\n\r\nconst Metod = () => {\r\n  return(\r\n    <div className={classes.metod}>\r\n      <div className={`${classes.metod_info} bg-success text-white s34 bold`}>\r\n        Метод «360 градусов» — это метод текущей оценки персонала, который заключается в выявлении степени соответствия сотрудника занимаемой должности посредством опроса делового окружения сотрудника. При использовании этого метода оценку сотруднику дают «со всех сторон», то есть не только непосредственный руководитель, но и коллеги и подчиненные, а также сам сотрудник.\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Metod;","import React from 'react';\r\nimport {ListGroup, ListGroupItem} from \"react-bootstrap\";\r\nimport classes from \"./CompetenceMainPage.module.css\";\r\n\r\n\r\nconst CompetenceMainPage = () => {\r\n  return(\r\n    <ListGroup horizontal className={classes.competences}>\r\n      <ListGroupItem className={`${classes.text} s34 bold`} >\r\n        Для получения оценки окружение её цели должны пройти опрос, ответив на ряд вопросов. Ответ на каждый из этих вопросов даст вам оценку по той, или иной компетенции.\r\n      </ListGroupItem>\r\n      <ListGroupItem className={`bg-success text-white ${classes.list}`}>\r\n        <div className={\"s34 bold\"}>\r\n          Список компетенций:\r\n        </div>\r\n        <div className={`${classes.list_competences}`}>\r\n          <div className={\"s28\"}>\r\n            Клиентоориентированность\r\n          </div>\r\n          <div className={\"s28\"}>\r\n            Лояльность\r\n          </div>\r\n          <div className={\"s28\"}>\r\n            Инициативность\r\n          </div>\r\n          <div className={\"s28\"}>\r\n            Адаптивность\r\n          </div>\r\n          <div className={\"s28\"}>\r\n            Самостоятельность\r\n          </div>\r\n          <div className={\"s28\"}>\r\n            Стрессоустойчивость\r\n          </div>\r\n          <div className={\"s28\"}>\r\n            Стремление к общению\r\n          </div>\r\n          <div className={\"s28\"}>\r\n            Управление командой\r\n          </div>\r\n          <div className={\"s28\"}>\r\n            Планирование\r\n          </div>\r\n          <div className={\"s28\"}>\r\n            Обучение\r\n          </div>\r\n          <div className={\"s28\"}>\r\n            Мотивирование\r\n          </div>\r\n        </div>\r\n      </ListGroupItem>\r\n    </ListGroup>\r\n  )\r\n}\r\n\r\nexport default CompetenceMainPage;","import React from 'react';\r\nimport Welcome from \"./welcome/Welcome\";\r\nimport Metod from \"./metod/Metod\";\r\nimport CompetenceMainPage from \"./competence/CompetencesMainPage\";\r\n\r\n\r\nconst Main = () =>{\r\n  return(\r\n    <div>\r\n      <Welcome />\r\n      <Metod />\r\n      <CompetenceMainPage />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\n\r\nconst PollMessage = () => {\r\n  return(\r\n    <div>\r\n      Чтобы увидеть опросы для прохождения, пожалуйста, войдите\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PollMessage;","import React from 'react';\r\nimport {Button, ListGroupItem} from \"react-bootstrap\";\r\nimport classes from \"./PoolLink.module.css\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\ninterface IProps {\r\n  id: number;\r\n  inter_id: number;\r\n  user_name: string;\r\n  user_position: string;\r\n  setCurrentPoll: (poll: any) => any;\r\n}\r\n\r\nconst PoolLink = (props: IProps) => {\r\n  return(\r\n    <ListGroupItem>\r\n      <div className={classes.item}>\r\n        <div className=\"text-dark\">\r\n          <span className=\"fw-bold\">{props.user_name}</span>\r\n          &nbsp;\r\n          <span>{props.user_position}</span>\r\n        </div>\r\n        <div>\r\n          <Link to={{pathname: '/poll', search: `id=${props.id}&inter_id=${props.inter_id}`}}>\r\n            <Button\r\n              variant=\"warning\"\r\n            >Перейти к опросу</Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </ListGroupItem>\r\n  )\r\n}\r\n\r\nexport default PoolLink;","import {TPoll, TQuestion} from \"../interfaces/Polls.types\";\r\n\r\n\r\nconst initialState = {\r\n  polls:[],\r\n  questions: [],\r\n  currentPoll: {}\r\n}\r\n\r\ntype TState = typeof initialState;\r\ntype PollsActionType = ReturnType<typeof setPollsAC> | ReturnType<typeof removePollAC> |\r\n  ReturnType<typeof setQuestionsAC> | ReturnType<typeof setCurrentPollAC>;\r\n\r\nconst poolsReducer = (state: TState = initialState, action: PollsActionType) => {\r\n  switch (action.type) {\r\n    case \"SET-POLLS\": {\r\n      return {...state, polls: action.polls};\r\n    }\r\n    case \"REMOVE-POLL\": {\r\n      return {...state, polls: state.polls.filter((poll) => {\r\n        return !(poll.id === action.pollID)\r\n      })};\r\n    }\r\n    case \"SET-QUESTIONS\": {\r\n      return {...state, questions: action.questions}\r\n    }\r\n    case \"SET-CURRENT-POLL\": {\r\n      return {...state, currentPoll: action.poll}\r\n    }\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default poolsReducer;\r\n\r\nexport const setPollsAC = (polls: TPoll[]) => ({type: \"SET-POLLS\", polls} as const);\r\nexport const removePollAC = (pollID: number) => ({type: \"REMOVE-POLL\", pollID} as const);\r\nexport const setQuestionsAC = (questions: Array<TQuestion>) => ({type: \"SET-QUESTIONS\", questions} as const);\r\nexport const setCurrentPollAC = (poll: any) => ({type: \"SET-CURRENT-POLL\", poll} as const);","import React from 'react';\r\nimport PoolLink from \"./PoolLink\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setCurrentPollAC} from \"../../../store/pools-reducer\";\r\n\r\n\r\ninterface IProps {\r\n  id: number;\r\n  inter_id: number;\r\n  user_name: string;\r\n  user_position: string;\r\n}\r\n\r\nconst PollLinkContainer = (props: IProps) => {\r\n  const dispatch = useDispatch();\r\n  const setCurrentPoll = (poll) => {\r\n    console.log(\"Tac\")\r\n    dispatch(setCurrentPollAC(poll));\r\n  }\r\n\r\n  return(\r\n    <PoolLink\r\n      id={props.id}\r\n      inter_id={props.inter_id}\r\n      user_name={props.user_name}\r\n      user_position={props.user_position}\r\n      setCurrentPoll={setCurrentPoll}\r\n    />\r\n  )\r\n}\r\n\r\nexport default PollLinkContainer;","import React from 'react';\r\nimport {ListGroup, Card} from \"react-bootstrap\";\r\nimport {TPoll} from \"../../../interfaces/Polls.types\";\r\nimport classes from './Polls.module.css';\r\nimport PollMessage from \"./PollMessage\";\r\nimport PollLinkContainer from \"./PollLink.container\";\r\n\r\n\r\ninterface IProps {\r\n  pools: TPoll[];\r\n  isIn: boolean;\r\n}\r\n\r\nconst Polls = (props: IProps) => {\r\n  return (\r\n    <Card>\r\n      <Card.Header className=\"fw-bold s22\">\r\n        Список опросов для проведения оценки:\r\n      </Card.Header>\r\n      <Card.Body>\r\n        {props.isIn ?\r\n          <div className={classes.polls_container}>\r\n            <ListGroup>\r\n              {props.pools.map((prop: TPoll) => (\r\n                <PollLinkContainer\r\n                  key={prop.id}\r\n                  id={prop.id}\r\n                  inter_id={prop.inter_id}\r\n                  user_name={prop.userInfo.user_name}\r\n                  user_position={prop.userInfo.user_position}\r\n                />\r\n              ))}\r\n            </ListGroup>\r\n          </div>\r\n          :\r\n          <PollMessage />\r\n        }\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Polls;","import {useCallback, useState} from \"react\";\r\n\r\n\r\nconst useHttp = () => {\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n    try {\r\n      if(body){\r\n        headers['Content-Type'] = 'application/json';\r\n        body = JSON.stringify(body);\r\n      }\r\n      const res =  await fetch(url, {method, body, headers});\r\n      const data = await res.json();\r\n      if(!res.ok) {\r\n        throw new Error(data.message || \"Что-то пошло не так\");\r\n      }\r\n      return data\r\n    } catch (e) {\r\n      setError(e.message);\r\n      throw e;\r\n    }\r\n  }, [])\r\n  const clearError = () => setError(null);\r\n  return {request, error, clearError}\r\n}\r\n\r\nexport default useHttp;","import React, {useEffect} from 'react';\r\nimport Polls from \"./Polls\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ReducersType} from \"../../../store/store\";\r\nimport {TPoll} from \"../../../interfaces/Polls.types\";\r\nimport {setPollsAC} from \"../../../store/pools-reducer\";\r\nimport useHttp from \"../../../assets/hooks/http\";\r\n\r\nconst PollsContainer = () => {\r\n  const isIn: boolean = useSelector((state: ReducersType) => state.user.user.isIn);\r\n  const pools: Array<TPoll> = useSelector((state: ReducersType) => state.pools.polls);\r\n  const userId: number = useSelector((state: ReducersType) => state.user.user.info.id);\r\n  const {request} = useHttp();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if(userId !== 0){\r\n      request('/api/polls/', \"POST\", {userId}).then(res => {\r\n        dispatch(setPollsAC(res));\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return(\r\n    <Polls\r\n      pools={pools}\r\n      isIn={isIn}\r\n    />\r\n  )\r\n}\r\n\r\nexport default PollsContainer;","import React from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport {IUserInfo} from \"../../../interfaces/User.types\";\r\nimport classes from \"./Users.module.css\";\r\n\r\n\r\nconst User = (props: IUserInfo) => {\r\n  return(\r\n    <ListGroup horizontal className={classes.user}>\r\n      <ListGroup.Item className=\"user-id\">\r\n        {props.id}\r\n      </ListGroup.Item>\r\n      <ListGroup.Item className=\"user-name\">\r\n        {props.user_name}\r\n      </ListGroup.Item>\r\n      <ListGroup.Item className=\"user-pos\">\r\n        {props.user_position}\r\n      </ListGroup.Item>\r\n      <ListGroup.Item className=\"user-login\">\r\n        {props.login}\r\n      </ListGroup.Item>\r\n      <ListGroup.Item className=\"user-email\">\r\n        {props.email}\r\n      </ListGroup.Item>\r\n      <ListGroup.Item className=\"user-admin\">\r\n        {props.isAdmin}\r\n      </ListGroup.Item>\r\n    </ListGroup>\r\n  )\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport {IUserInfo} from \"../../../interfaces/User.types\";\r\nimport User from \"./User\";\r\nimport {ListGroup} from \"react-bootstrap\";\r\n\r\n\r\nconst Users = (props) => {\r\n  return(\r\n    <div>\r\n      <div>\r\n        <h3>Список пользователй</h3>\r\n      </div>\r\n      <ListGroup horizontal>\r\n        <ListGroup.Item>id пользователя</ListGroup.Item>\r\n        <ListGroup.Item>ФИО пользователя</ListGroup.Item>\r\n        <ListGroup.Item>Должность пользователя</ListGroup.Item>\r\n        <ListGroup.Item>Это админ</ListGroup.Item>\r\n        <ListGroup.Item>Логин пользователя</ListGroup.Item>\r\n        <ListGroup.Item>Почта пользователя</ListGroup.Item>\r\n      </ListGroup>\r\n      <ListGroup>\r\n        {props.users.map((user: IUserInfo) => (\r\n          <User\r\n            key={user.id}\r\n            id={user.id}\r\n            user_name={user.user_name}\r\n            user_position={user.user_position}\r\n            isAdmin={user.isAdmin}\r\n            login={user.login}\r\n            email={user.email}\r\n          />\r\n        ))}\r\n      </ListGroup>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Users","import React, {Component} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {ReducersType} from \"../../store/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst withClosedAccess = (Component) => {\r\n  const ClosedComponent = (props) => {\r\n    const isAdmin = useSelector((state: ReducersType) => state.user.user.info.isAdmin);\r\n    if(!isAdmin){\r\n      return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return <Component {...props} />\r\n  }\r\n\r\n  return ClosedComponent;\r\n}\r\n\r\nexport default withClosedAccess;","import React, {useEffect, useState} from 'react';\r\nimport Users from \"./Users\";\r\nimport withClosedAccess from \"../../../assets/hocs/ClosedAccess\";\r\nimport useHttp from \"../../../assets/hooks/http\";\r\n\r\n\r\nconst UsersContainer = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const {request} = useHttp();\r\n\r\n\r\n  useEffect(() => {\r\n    request('/api/users/', \"GET\").then((res) => {\r\n      setUsers(res)\r\n    }).catch(e => console.log(e));\r\n  }, [])\r\n\r\n  return(\r\n    <Users\r\n      users={users}\r\n    />\r\n  )\r\n}\r\n\r\nexport default withClosedAccess(UsersContainer);","import React from 'react';\r\n\r\n\r\nconst ErrorMessage = ({error}) => {\r\n  return(\r\n    <div>\r\n      {error}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const FormControl = ({input, meta: {touched, error}, children}) => {\r\n  const hasError: boolean = touched && error;\r\n  return(\r\n    <div>\r\n      <div>\r\n        {children}\r\n      </div>\r\n      {hasError && <ErrorMessage error={error} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Input = (props) => {\r\n  const {input, meta, child, ...restProps} = props;\r\n  return(\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps}/>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n  const {input, meta, child, ...restProps} = props;\r\n  return(\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps}/>\r\n    </FormControl>\r\n  )\r\n}","export const required = (value) => {\r\n  if(value) return undefined;\r\n\r\n  return \"Поле должно быть заполненно\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n  if(value && value.length > maxLength) {\r\n    return `Максимальная длина ${maxLength} символов`;\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nexport const minLengthCreator = (minLength: number) => (value: string) => {\r\n  if(value && value.length < minLength) {\r\n    return `Минимальная длина ${minLength} символов`;\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\n","import React from 'react';\r\nimport {Form, reduxForm, Field} from \"redux-form\";\r\nimport {Input} from \"../../../form-controls/FormControls\";\r\nimport classes from \"../Registr.module.css\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../../../assets/validators/validators\";\r\n\r\n\r\nconst minName = minLengthCreator(3);\r\nconst minPos = minLengthCreator(5);\r\nconst minPassword = minLengthCreator(6);\r\nconst maxLength = maxLengthCreator(50);\r\n\r\nconst RegistrationForm = (props) => {\r\n  return (\r\n    <Form onSubmit={props.handleSubmit}>\r\n      <div className={classes.input}>\r\n        <Field\r\n          name=\"email\"\r\n          id=\"email\"\r\n          placeholder=\"Введите email\"\r\n          component={Input}\r\n          validate={[required, maxLength]}\r\n        />\r\n      </div>\r\n      <div className={classes.input}>\r\n        <Field\r\n          name=\"name\"\r\n          id=\"name\"\r\n          placeholder=\"Введите имя\"\r\n          component={Input}\r\n          validate={[required, minName, maxLength]}\r\n        />\r\n      </div>\r\n      <div className={classes.input}>\r\n        <Field\r\n          name=\"family\"\r\n          id=\"family\"\r\n          placeholder=\"Введите фамилию\"\r\n          component={Input}\r\n          validate={[required, minName, maxLength]}\r\n        />\r\n      </div>\r\n      <div className={classes.input}>\r\n        <Field\r\n          name=\"patronymic\"\r\n          id=\"patronymic\"\r\n          placeholder=\"Введите отчество\"\r\n          component={Input}\r\n          validate={[required, minName, maxLength]}\r\n        />\r\n      </div>\r\n      <div className={classes.input}>\r\n        <Field\r\n          name=\"position\"\r\n          id=\"position\"\r\n          placeholder=\"Введите должность\"\r\n          component={Input}\r\n          validate={[required, minPos, maxLength]}\r\n        />\r\n      </div>\r\n      <div className={classes.input}>\r\n        <Field\r\n          name=\"password\"\r\n          id=\"password\"\r\n          placeholder=\"Введите пароль\"\r\n          component={Input}\r\n          type=\"password\"\r\n          validate={[required, minPassword]}\r\n        />\r\n      </div>\r\n      <div className={classes.input}>\r\n        <Field\r\n          name=\"password_again\"\r\n          id=\"password_again\"\r\n          placeholder=\"Введите пароль ещё раз\"\r\n          component={Input}\r\n          type=\"password\"\r\n          validate={[required, minPassword]}\r\n        />\r\n      </div>\r\n      <div className={classes.input}>\r\n        <button className=\"btn btn-warning\" >\r\n          Зарегистрировать пользователя\r\n        </button>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default reduxForm({form: \"registration\"})(RegistrationForm);","import React, {useState} from 'react';\r\nimport RegistrationForm from \"./RegistrForm\";\r\nimport useHttp from \"../../../../assets/hooks/http\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst RegistrationFormContainer = () => {\r\n  const {request} = useHttp();\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  const handleSubmit = async (form) => {\r\n    try{\r\n      await request('/api/auth/register', \"POST\", {...form});\r\n      setRedirect(true)\r\n    } catch (e) {\r\n\r\n    }\r\n  }\r\n\r\n  if(redirect){\r\n    return <Redirect to={\"/\"} />\r\n  }\r\n\r\n  return(\r\n    <RegistrationForm\r\n      onSubmit={handleSubmit}\r\n    />\r\n  )\r\n}\r\n\r\nexport default RegistrationFormContainer;","import React from 'react';\r\nimport RegistrationFormContainer from \"./form/RegistrForm.container\";\r\nimport {Card, ListGroup} from \"react-bootstrap\";\r\nimport classes from \"./Registr.module.css\";\r\nimport withClosedAccess from \"../../../assets/hocs/ClosedAccess\";\r\n\r\n\r\nconst Registration = () => {\r\n  return(\r\n    <Card className={classes.registr}>\r\n      <ListGroup>\r\n        <ListGroup.Item>\r\n          <h3>Регистрация</h3>\r\n        </ListGroup.Item>\r\n        <ListGroup.Item>\r\n          <RegistrationFormContainer />\r\n        </ListGroup.Item>\r\n      </ListGroup>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default withClosedAccess(Registration)","import  React from 'react';\r\nimport {Field} from \"redux-form\";\r\n\r\n\r\ninterface IProps {\r\n  id: number;\r\n}\r\n\r\nconst AnswerOpts = (props: IProps) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <label className=\"s18 px-2\" htmlFor={`${props.id}-1`}>Совершенно согласен</label>\r\n        <Field\r\n          type=\"radio\"\r\n          component=\"input\"\r\n          id={`${props.id}-1`}\r\n          value=\"agree\"\r\n          name={`${props.id}`}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label className=\"s18 px-2\" htmlFor={`${props.id}-2`}>Скорее согласен</label>\r\n        <Field\r\n          type=\"radio\"\r\n          component=\"input\"\r\n          id={`${props.id}-2`}\r\n          value=\"rather-agree\"\r\n          name={`${props.id}`}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label className=\"s18 px-2\" htmlFor={`${props.id}-3`}>\r\n          Не знаю/ Не владею информацией\r\n        </label>\r\n        <Field\r\n          component=\"input\"\r\n          type=\"radio\"\r\n          id={`${props.id}-3`}\r\n          value=\"not-sure\"\r\n          name={`${props.id}`}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label className=\"s18 px-2\" htmlFor={`${props.id}-4`}>\r\n          Скорее не согласен\r\n        </label>\r\n        <Field\r\n          component=\"input\"\r\n          type=\"radio\"\r\n          id={`${props.id}-4`}\r\n          value=\"rather-not-agree\"\r\n          name={`${props.id}`}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label className=\"s18 px-2\" htmlFor={`${props.id}-5`}>Полностью не согласен</label>\r\n        <Field\r\n          component=\"input\"\r\n          type=\"radio\"\r\n          id={`${props.id}-5`}\r\n          value=\"not-agree\"\r\n          name={`${props.id}`}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AnswerOpts;","import React from 'react';\r\nimport {ListGroup} from \"react-bootstrap\";\r\nimport AnswerOpts from \"./AnswerOpt\";\r\n\r\n\r\ninterface IProps {\r\n  id: number\r\n  question: string;\r\n}\r\n\r\nconst Question = (props: IProps) => {\r\n  return(\r\n    <ListGroup.Item>\r\n      <div>\r\n        <div>\r\n          <label className={'fw-bold s22'}>\r\n            {props.question}\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <AnswerOpts\r\n            id={props.id}\r\n          />\r\n        </div>\r\n      </div>\r\n    </ListGroup.Item>\r\n  )\r\n}\r\n\r\nexport default Question;\r\n","import React from 'react';\r\nimport {ListGroup} from \"react-bootstrap\";\r\nimport {Form, reduxForm} from \"redux-form\";\r\nimport Question from \"./Question\";\r\nimport {TQuestion} from \"../../../../interfaces/Polls.types\";\r\n\r\n\r\nconst Poll = (props: any) => {\r\n  return (\r\n    <Form onSubmit={props.handleSubmit}>\r\n      {props.questions.map((quest: TQuestion) => (\r\n        <Question\r\n          question={quest.question}\r\n          id={quest.id}\r\n          key={quest.id}/>\r\n      ))}\r\n      {props.errorMessage && <ListGroup.Item className={\"s22\"}>{props.errorMessage}</ListGroup.Item>}\r\n      <ListGroup.Item>\r\n        <button className=\"btn btn-warning\">\r\n          Отправить оценку\r\n        </button>\r\n      </ListGroup.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({form: \"poll\"})(Poll);","import React, {useEffect, useState} from 'react';\r\nimport Poll from \"./Poll\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect, withRouter} from \"react-router-dom\"\r\nimport useHttp from \"../../../../assets/hooks/http\";\r\nimport {setQuestionsAC} from \"../../../../store/pools-reducer\";\r\nimport {TQuestion} from \"../../../../interfaces/Polls.types\";\r\nimport {ReducersType} from \"../../../../store/store\";\r\n\r\n\r\nconst PollContainer = (props) => {\r\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\r\n  const [redirect, setRedirect] = useState(false);\r\n  const questions: Array<TQuestion> = useSelector((state: ReducersType) => state.pools.questions);\r\n  const dispatch = useDispatch();\r\n  const {request} = useHttp();\r\n\r\n  useEffect(() => {\r\n    request('/api/polls/questions', \"GET\").then((res) => {\r\n      dispatch(setQuestionsAC(res));\r\n    }).catch(e => console.log(e));\r\n  }, []);\r\n\r\n\r\n  const data: any = {\r\n    questions,\r\n    errorMessage\r\n  }\r\n\r\n  const handleSubmit = async (form) => {\r\n    if(Object.keys(form).length !== questions.length){\r\n      setErrorMessage(\"Ответье на все вопросы!\");\r\n      return false;\r\n    }\r\n    setErrorMessage(\"\");\r\n    form.length = questions.length + 1;\r\n    request(\r\n      \"/api/polls/answers\",\r\n      \"POST\",\r\n      {\r\n        answers: Array.from(form),\r\n        poll_id: new URLSearchParams(props.location.search).get(\"id\"),\r\n        inter_id: new URLSearchParams(props.location.search).get(\"inter_id\")\r\n      });\r\n    setRedirect(true)\r\n  }\r\n\r\n  if(redirect){\r\n    return <Redirect to={\"/polls\"} />\r\n  }\r\n\r\n  return(\r\n    <Poll\r\n      {...data}\r\n      onSubmit={handleSubmit}\r\n    />\r\n  )\r\n}\r\n\r\nexport default withRouter(PollContainer);","import React from 'react';\r\nimport classes from \"../AdminPolls.module.css\";\r\nimport {ListGroup} from \"react-bootstrap\";\r\n\r\n\r\ninterface IProps {\r\n  id: number;\r\n  appraisal_target_id: number;\r\n  isOver: boolean;\r\n  user_name: string;\r\n  user_position: string;\r\n  login: string;\r\n  email: string;\r\n}\r\n\r\nconst AdminPollItem = (props: IProps) => {\r\n  return(\r\n    <ListGroup horizontal={'sm'} className={classes.poll}>\r\n      <ListGroup.Item className=\"poll-id\">\r\n        {props.id}\r\n      </ListGroup.Item>\r\n      <ListGroup.Item className=\"poll-target-id\">\r\n        {props.appraisal_target_id}\r\n      </ListGroup.Item>\r\n      <ListGroup.Item className=\"poll-isOver\">\r\n        {props.isOver}\r\n      </ListGroup.Item>\r\n      <ListGroup.Item className=\"poll-target-name\">\r\n        {props.user_name}\r\n      </ListGroup.Item>\r\n      <ListGroup.Item className=\"poll-target-position\">\r\n        {props.user_position}\r\n      </ListGroup.Item>\r\n      <ListGroup.Item className=\"poll-target-login\">\r\n        {props.login}\r\n      </ListGroup.Item>\r\n      <ListGroup.Item className=\"poll-target-email\">\r\n        {props.email}\r\n      </ListGroup.Item>\r\n    </ListGroup>\r\n  )\r\n}\r\n\r\nexport default AdminPollItem;","import React from 'react';\r\nimport {ListGroup} from \"react-bootstrap\";\r\nimport AdminPollItem from \"./poll/Poll\";\r\n\r\n\r\ninterface IPoll {\r\n  id: number;\r\n  appraisal_target_id: number;\r\n  isOver: boolean;\r\n  user_name: string;\r\n  user_position: string;\r\n  login: string;\r\n  email: string;\r\n}\r\n\r\ninterface IProps {\r\n  polls: IPoll[];\r\n}\r\n\r\nconst Polls = (props: IProps) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h3>Список опросов</h3>\r\n      </div>\r\n      <div>\r\n        <ListGroup horizontal={'sm'}>\r\n          <ListGroup.Item>id опроса</ListGroup.Item>\r\n          <ListGroup.Item>id цели опроса</ListGroup.Item>\r\n          <ListGroup.Item>Опрос закончен</ListGroup.Item>\r\n          <ListGroup.Item>Имя цели опроса</ListGroup.Item>\r\n          <ListGroup.Item>Должность цели опроса</ListGroup.Item>\r\n          <ListGroup.Item>Логин цели опроса</ListGroup.Item>\r\n          <ListGroup.Item>Почта цели опроса</ListGroup.Item>\r\n        </ListGroup>\r\n      </div>\r\n      <div>\r\n        {props.polls.map((poll: IPoll) => (\r\n          <AdminPollItem\r\n            key={poll.id}\r\n            id={poll.id}\r\n            appraisal_target_id={poll.appraisal_target_id}\r\n            isOver={poll.isOver}\r\n            user_name={poll.user_name}\r\n            user_position={poll.user_position}\r\n            login={poll.login}\r\n            email={poll.email}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Polls;","import React, {useEffect, useState} from 'react';\r\nimport Polls from \"./Polls\";\r\nimport useHttp from \"../../../assets/hooks/http\";\r\n\r\n\r\nconst AdminPollsContainer = () => {\r\n  const [polls, setPolls] = useState([]);\r\n  const {request} = useHttp();\r\n\r\n\r\n  useEffect(() => {\r\n    request('/api/polls/admin', \"GET\").then((res) => {\r\n      setPolls(res)\r\n    }).catch(e => console.log(e));\r\n  }, [])\r\n\r\n\r\n  return(\r\n    <Polls polls={polls} />\r\n  )\r\n}\r\n\r\nexport default AdminPollsContainer;","import React, {ChangeEvent} from 'react';\r\nimport classes from \"../AddPoll.module.css\";\r\n\r\n\r\ninterface IProps {\r\n  input: string;\r\n  setInput: (value: string) => void;\r\n  usersFilter: () => void;\r\n  clearFilter: () => void;\r\n}\r\n\r\nconst AddPollForm = (props: IProps) => {\r\n  return(\r\n    <div>\r\n      <span className={classes.search}>\r\n        <input\r\n          placeholder={\"Введите имя пользователя или его id\"}\r\n          value={props.input}\r\n          onChange={(data: ChangeEvent<HTMLInputElement>) => props.setInput(data.target.value)}\r\n        />\r\n      </span>\r\n      <span className={classes.filter}>\r\n        <button onClick={props.usersFilter} className={\"btn btn-warning\"}>\r\n          Отфильтровать\r\n        </button>\r\n      </span>\r\n      <span className={classes.clearFilter}>\r\n        <button onClick={props.clearFilter} className={\"btn btn-warning\"}>\r\n          Отменить фильтрацию\r\n        </button>\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddPollForm;","import React from 'react';\r\nimport {ListGroup} from \"react-bootstrap\";\r\nimport {IUserInfo} from \"../../../../interfaces/User.types\";\r\nimport {Field} from \"redux-form\";\r\n\r\n\r\n\r\nconst UserListItem = (props: IUserInfo) => {\r\n  return (\r\n    <div>\r\n      <label htmlFor={`user-${props.id}`}>\r\n        <ListGroup horizontal>\r\n          <ListGroup.Item>\r\n            <Field\r\n              type=\"radio\"\r\n              component=\"input\"\r\n              id={`user-${props.id}`}\r\n              value={`${props.id}`}\r\n              name={`users`}\r\n            />\r\n          </ListGroup.Item>\r\n          <ListGroup.Item className=\"user-id\">\r\n            {props.id}\r\n          </ListGroup.Item>\r\n          <ListGroup.Item className=\"user-name\">\r\n            {props.user_name}\r\n          </ListGroup.Item>\r\n          <ListGroup.Item className=\"user-pos\">\r\n            {props.user_position}\r\n          </ListGroup.Item>\r\n          <ListGroup.Item className=\"user-login\">\r\n            {props.login}\r\n          </ListGroup.Item>\r\n          <ListGroup.Item className=\"user-email\">\r\n            {props.email}\r\n          </ListGroup.Item>\r\n          <ListGroup.Item className=\"user-admin\">\r\n            {props.isAdmin}\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserListItem;","import React from 'react';\r\nimport {IUserInfo} from \"../../../../interfaces/User.types\";\r\nimport UserListItem from \"./UserListItem\";\r\nimport {reduxForm, Form} from \"redux-form\";\r\n\r\n\r\n// interface IProps {\r\n//   users: IUserInfo[];\r\n//   handleSubmit: any;\r\n// }\r\n\r\nconst UserList = (props) => {\r\n  return (\r\n    <Form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <h3>\r\n          Список пользователей\r\n        </h3>\r\n      </div>\r\n      <div>\r\n        <button className=\"btn btn-warning\">\r\n          Создать опрос\r\n        </button>\r\n      </div>\r\n      <div>\r\n        {props.users.map((user: IUserInfo) => (\r\n          <UserListItem\r\n            key={user.id}\r\n            id={user.id}\r\n            user_name={user.user_name}\r\n            user_position={user.user_position}\r\n            isAdmin={user.isAdmin}\r\n            login={user.login}\r\n            email={user.email}\r\n          />\r\n        ))}\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default reduxForm({form: \"add-poll\"})(UserList);","import React, {useState} from 'react';\r\nimport UserList from \"./UserList\";\r\nimport {IUserInfo} from \"../../../../interfaces/User.types\";\r\nimport useHttp from \"../../../../assets/hooks/http\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\ninterface IProps {\r\n  users: IUserInfo[];\r\n}\r\n\r\nconst UserListContainer = (props: IProps) => {\r\n  const [redirect, setRedirect] = useState(false);\r\n  const {request} = useHttp();\r\n\r\n  const data: any = {\r\n    users: props.users\r\n  }\r\n\r\n  const handleSubmit = async (form) => {\r\n    try{\r\n      await request('/api/polls/admin', \"POST\", {...form});\r\n      setRedirect(true)\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  if(redirect){\r\n    return <Redirect to={\"/\"}/>;\r\n  }\r\n\r\n  return(\r\n    <UserList\r\n      {...data}\r\n      onSubmit={handleSubmit}\r\n    />\r\n  )\r\n}\r\n\r\nexport default UserListContainer;","import React from 'react';\r\nimport AddPollForm from \"./form/AddPollForm\";\r\nimport UserListContainer from \"./user-list/UserList.container\";\r\nimport {IUserInfo} from \"../../../interfaces/User.types\";\r\nimport {ListGroup} from \"react-bootstrap\";\r\n\r\n\r\ninterface IProps {\r\n  input: string;\r\n  users: IUserInfo[];\r\n  setInput: (data: string) => void;\r\n  usersFilter: () => void;\r\n  clearFilter: () => void;\r\n}\r\n\r\nconst AdminAddPoll = (props: IProps) => {\r\n  return(\r\n    <ListGroup>\r\n      <ListGroup.Item>\r\n        <h3>Создать цель для опроса</h3>\r\n      </ListGroup.Item>\r\n      <ListGroup.Item>\r\n        <AddPollForm\r\n          input={props.input}\r\n          setInput={props.setInput}\r\n          usersFilter={props.usersFilter}\r\n          clearFilter={props.clearFilter}\r\n        />\r\n      </ListGroup.Item>\r\n      <ListGroup.Item>\r\n        <UserListContainer\r\n          users={props.users}\r\n        />\r\n      </ListGroup.Item>\r\n    </ListGroup>\r\n  )\r\n}\r\n\r\nexport default AdminAddPoll;","import React, {useEffect, useState} from 'react';\r\nimport AdminAddPoll from \"./AddPoll\";\r\nimport useHttp from \"../../../assets/hooks/http\";\r\nimport {IUserInfo} from \"../../../interfaces/User.types\";\r\n\r\n\r\nconst AdminAddPollContainer = () => {\r\n  const [input, setInput] = useState<string>(\"\")\r\n  const [users, setUsers] = useState([]);\r\n  const {request} = useHttp();\r\n\r\n  useEffect(() => {\r\n    request('/api/users/', \"GET\").then((res) => {\r\n      setUsers(res)\r\n    }).catch(e => console.log(e));\r\n  }, [])\r\n\r\n  const usersFilter = () => {\r\n    setUsers(users.filter((user: IUserInfo) => {\r\n      return user.id.toString() === input || user.user_name.includes(input)\r\n        || user.email.includes(input) || user.login.includes(input);\r\n    }));\r\n  }\r\n\r\n  const clearFilter = async () => {\r\n    await request('/api/users/', \"GET\").then((res) => {\r\n      setUsers(res)\r\n    }).catch(e => console.log(e));\r\n    setInput(\"\");\r\n  }\r\n\r\n  return(\r\n    <AdminAddPoll\r\n      users={users}\r\n      input={input}\r\n      setInput={setInput}\r\n      usersFilter={usersFilter}\r\n      clearFilter={clearFilter}\r\n    />\r\n  )\r\n}\r\n\r\nexport default AdminAddPollContainer;","import React, {ChangeEvent} from 'react';\r\nimport classes from \"../SelectPoll.module.css\";\r\n\r\n\r\ninterface IProps {\r\n  input: string;\r\n  setInput: (input: string) => void;\r\n}\r\n\r\nconst SelectPollInput = (props: IProps) => {\r\n  return(\r\n    <div className={classes.input}>\r\n      <input\r\n        placeholder=\"Введите данные опроса\"\r\n        value={props.input}\r\n        onChange={(data: ChangeEvent<HTMLInputElement>) => props.setInput(data.target.value)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SelectPollInput;","import React from 'react';\r\nimport {ListGroup, ListGroupItem} from \"react-bootstrap\";\r\nimport {Field} from \"redux-form\";\r\n\r\n\r\ninterface IPoll {\r\n  id: number;\r\n  appraisal_target_id: number;\r\n  isOver: boolean;\r\n  user_name: string;\r\n  user_position: string;\r\n  login: string;\r\n  email: string;\r\n}\r\n\r\nconst SelectPollListItem = (props: IPoll) => {\r\n  return(\r\n    <div>\r\n      <label htmlFor={`poll-${props.id}`}>\r\n        <ListGroup horizontal>\r\n          <ListGroupItem>\r\n            <Field\r\n              type=\"radio\"\r\n              component=\"input\"\r\n              id={`poll-${props.id}`}\r\n              value={`${props.id}`}\r\n              name=\"polls\"\r\n            />\r\n          </ListGroupItem>\r\n          <ListGroupItem>\r\n            {props.id}\r\n          </ListGroupItem>\r\n          <ListGroupItem>\r\n            {props.appraisal_target_id}\r\n          </ListGroupItem>\r\n          <ListGroupItem>\r\n            {props.isOver}\r\n          </ListGroupItem>\r\n          <ListGroupItem>\r\n            {props.user_name}\r\n          </ListGroupItem>\r\n          <ListGroupItem>\r\n            {props.user_position}\r\n          </ListGroupItem>\r\n          <ListGroupItem>\r\n            {props.login}\r\n          </ListGroupItem>\r\n          <ListGroupItem>\r\n            {props.email}\r\n          </ListGroupItem>\r\n        </ListGroup>\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SelectPollListItem;","import React from 'react';\r\nimport SelectPollListItem from \"./SelectPollListItem\";\r\n\r\n\r\ninterface IPoll {\r\n  id: number;\r\n  appraisal_target_id: number;\r\n  isOver: boolean;\r\n  user_name: string;\r\n  user_position: string;\r\n  login: string;\r\n  email: string;\r\n}\r\n\r\ninterface IProps {\r\n  polls: IPoll[];\r\n}\r\n\r\nconst SelectPollList = (props: IProps) => {\r\n  return(\r\n    <div>\r\n      <div>\r\n        {props.polls.map((poll: IPoll) => (\r\n          <SelectPollListItem\r\n            key={poll.id}\r\n            id={poll.id}\r\n            appraisal_target_id={poll.appraisal_target_id}\r\n            isOver={poll.isOver}\r\n            user_name={poll.user_name}\r\n            user_position={poll.user_position}\r\n            login={poll.login}\r\n            email={poll.email}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SelectPollList;","import React from 'react';\r\nimport SelectPollInput from \"./form/SelectPollInput\";\r\nimport SelectPollList from \"./list/SelectPollList\";\r\n\r\n\r\ninterface IPoll {\r\n  id: number;\r\n  appraisal_target_id: number;\r\n  isOver: boolean;\r\n  user_name: string;\r\n  user_position: string;\r\n  login: string;\r\n  email: string;\r\n}\r\n\r\ninterface IProps {\r\n  input: string;\r\n  polls: IPoll[];\r\n  setInput: (input: string) => void;\r\n}\r\n\r\nconst SelectPoll = (props: IProps) => {\r\n  return(\r\n    <div>\r\n      <div>\r\n        <SelectPollInput\r\n          input={props.input}\r\n          setInput={props.setInput}\r\n        />\r\n      </div>\r\n      <div>\r\n        <SelectPollList\r\n          polls={props.polls}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SelectPoll;","import React, {useEffect, useState} from 'react';\r\nimport SelectPoll from \"./SelectPoll\";\r\nimport useHttp from \"../../../../assets/hooks/http\";\r\n\r\n\r\ninterface IPoll {\r\n  id: number;\r\n  appraisal_target_id: number;\r\n  isOver: boolean;\r\n  user_name: string;\r\n  user_position: string;\r\n  login: string;\r\n  email: string;\r\n}\r\n\r\ninterface IProps {\r\n  input: string;\r\n  setInput: (input: string) => void;\r\n}\r\n\r\nconst SelectPollContainer = (props: IProps) => {\r\n  const {request} = useHttp();\r\n  const [polls, setPolls] = useState([])\r\n  const [filteredPolls, setFilteredPolls] = useState([]);\r\n  useEffect(() => {\r\n    request('/api/polls/admin', \"GET\").then((res) => {\r\n      setPolls(res);\r\n      setFilteredPolls(res);\r\n    }).catch(e => console.log(e));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(props.input){\r\n      setFilteredPolls(polls.filter((poll: IPoll) => {\r\n        return poll.id.toString() === props.input || poll.user_name.includes(props.input) ||\r\n          poll.user_position.includes(props.input) || poll.login.includes(props.input) ||\r\n          poll.email.includes(props.input);\r\n      }));\r\n    }\r\n  }, [props.input]);\r\n\r\n  return(\r\n    <SelectPoll\r\n      input={props.input}\r\n      polls={filteredPolls}\r\n      setInput={props.setInput}\r\n    />\r\n  )\r\n}\r\n\r\nexport default SelectPollContainer;","import React from 'react';\r\nimport {IUserInfo} from \"../../../../interfaces/User.types\";\r\nimport {ListGroup, ListGroupItem} from \"react-bootstrap\";\r\nimport {Field} from \"redux-form\";\r\n\r\n\r\nconst SelectInterviewersItem = (props: IUserInfo) => {\r\n  return (\r\n    <div>\r\n      <label htmlFor={`user-${props.id}`}>\r\n        <ListGroup horizontal>\r\n          <ListGroupItem>\r\n            <Field\r\n              component={\"input\"}\r\n              type=\"checkbox\"\r\n              name={`${props.id}`}\r\n              id={`user-${props.id}`}\r\n            />\r\n          </ListGroupItem>\r\n          <ListGroupItem className=\"user-id\">\r\n            {props.id}\r\n          </ListGroupItem>\r\n          <ListGroupItem className=\"user-name\">\r\n            {props.user_name}\r\n          </ListGroupItem>\r\n          <ListGroupItem className=\"user-pos\">\r\n            {props.user_position}\r\n          </ListGroupItem>\r\n          <ListGroupItem className=\"user-login\">\r\n            {props.login}\r\n          </ListGroupItem>\r\n          <ListGroupItem className=\"user-email\">\r\n            {props.email}\r\n          </ListGroupItem>\r\n          <ListGroupItem className=\"user-admin\">\r\n            {props.isAdmin}\r\n          </ListGroupItem>\r\n        </ListGroup>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectInterviewersItem;","import React from 'react';\r\nimport {IUserInfo} from \"../../../../interfaces/User.types\";\r\nimport SelectInterviewersItem from \"./SelectInterviewersItem\";\r\n\r\n\r\ninterface IProps {\r\n  users: IUserInfo[];\r\n}\r\n\r\nconst SelectInterviewers = (props: IProps) => {\r\n  return(\r\n    <div>\r\n      <div>\r\n        {props.users.map((user: IUserInfo) => (\r\n          <SelectInterviewersItem\r\n            key={user.id}\r\n            id={user.id}\r\n            user_name={user.user_name}\r\n            user_position={user.user_position}\r\n            isAdmin={user.isAdmin}\r\n            login={user.login}\r\n            email={user.email}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SelectInterviewers;","import React, {useEffect, useState} from 'react';\r\nimport SelectInterviewers from \"./SelectInterviewers\";\r\nimport useHttp from \"../../../../assets/hooks/http\";\r\n\r\n\r\nconst SelectInterviewersContainer = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const {request} = useHttp();\r\n\r\n\r\n  useEffect(() => {\r\n    request('/api/users/', \"GET\").then((res) => {\r\n      setUsers(res)\r\n    }).catch(e => console.log(e));\r\n  }, [])\r\n\r\n  return(\r\n    <SelectInterviewers\r\n      users={users}\r\n    />\r\n  )\r\n}\r\n\r\nexport default SelectInterviewersContainer;","import React from 'react';\r\nimport SelectPollContainer from \"./polls/SelectPoll.container\";\r\nimport {ListGroup, ListGroupItem} from \"react-bootstrap\";\r\nimport SelectInterviewersContainer from \"./users/SelectInterviewers.container\";\r\nimport {Form, reduxForm} from \"redux-form\";\r\n\r\n\r\n// interface IProps {\r\n//   input: string;\r\n//   setInput: (input: string) => void;\r\n// }\r\n\r\nconst AdminAddInterviewer = (props) => {\r\n  return (\r\n    <div>\r\n      <Form onSubmit={props.handleSubmit}>\r\n        <ListGroup>\r\n          <div>\r\n            <ListGroupItem>\r\n              <button className={\"btn btn-warning\"}>\r\n                Добавить интервьюверов\r\n              </button>\r\n            </ListGroupItem>\r\n            <ListGroupItem>\r\n              <SelectPollContainer\r\n                input={props.input}\r\n                setInput={props.setInput}\r\n              />\r\n            </ListGroupItem>\r\n            <ListGroupItem>\r\n              <SelectInterviewersContainer/>\r\n            </ListGroupItem>\r\n          </div>\r\n        </ListGroup>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default reduxForm({form: \"add-interviewers\"})(AdminAddInterviewer);","import React, {useState} from 'react';\r\nimport AdminAddInterviewer from \"./AdminAddInterviewer\";\r\nimport useHttp from \"../../../assets/hooks/http\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst AdminAddInterviewerContainer = () => {\r\n  const {request} = useHttp();\r\n  const [input, setInput] = useState(\"\");\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  const data: any = {\r\n    input,\r\n    setInput\r\n  };\r\n\r\n  const handleSubmit = async (form) => {\r\n    try {\r\n      const polls = form.polls;\r\n      delete form.polls;\r\n      for(let key in form){\r\n        if(form[key] === false){\r\n          delete form[key];\r\n        }\r\n      }\r\n      await request(\r\n        '/api/polls/admin/interviewers',\r\n        \"POST\",\r\n        {polls, userId: Object.keys(form)\r\n        });\r\n      setRedirect(true);\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  if(redirect){\r\n    return <Redirect to={\"/\"} />\r\n  }\r\n\r\n  return(\r\n    <AdminAddInterviewer\r\n      {...data}\r\n      onSubmit={handleSubmit}\r\n    />\r\n  )\r\n}\r\n\r\nexport default AdminAddInterviewerContainer;","export default __webpack_public_path__ + \"static/media/user.33e7df09.png\";","import React from \"react\";\r\nimport {Col, Image} from \"react-bootstrap\";\r\nimport classes from './Info.module.css';\r\nimport image from '../../../../../assets/images/user.png';\r\n\r\n\r\ninterface IProps {\r\n  name: string;\r\n  position: string;\r\n}\r\n\r\nconst Info = (props: IProps) => {\r\n  return(\r\n    <div className={classes.block}>\r\n      <div className={classes.profile}>\r\n        <div>\r\n          <Col>\r\n            <Image roundedCircle src={image} width='100px' height='100px' />\r\n          </Col>\r\n        </div>\r\n        <div className={classes.info}>\r\n          <div className=\"fw-bold s22\">{props.name}</div>\r\n          <div className=\"s18\">{props.position}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Info;","import React from 'react';\r\nimport Info from \"./Info\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ReducersType} from \"../../../../../store/store\";\r\n\r\n\r\n\r\nconst InfoContainer = () => {\r\n  const user = useSelector((state: ReducersType) => state.user.user.info);\r\n  return(\r\n    <Info\r\n      name={user.login}\r\n      position={user.user_position}\r\n    />\r\n  )\r\n}\r\n\r\nexport default InfoContainer;","import React from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst GoToPolls = () => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        У вас есть непройденные опросы\r\n      </div>\r\n      <div>\r\n        <Link to={'/polls'}>\r\n          <Button variant=\"warning\">\r\n            Перейти к опросам\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GoToPolls;","import React from 'react';\r\nimport InfoContainer from \"./info/Info.container\";\r\nimport {ListGroup} from \"react-bootstrap\";\r\nimport GoToPolls from \"./go-to-polls/GoToPolls\";\r\nimport classes from \"./Profile.module.css\";\r\n\r\n\r\ninterface IProps {\r\n  havePolls: number;\r\n}\r\n\r\nconst Profile = (props: IProps) => {\r\n  return(\r\n    <div className={`text-dark ${classes.profile}`}>\r\n      <ListGroup>\r\n        <ListGroup.Item>\r\n          <InfoContainer />\r\n        </ListGroup.Item>\r\n        <ListGroup.Item>\r\n          {props.havePolls ?\r\n            <GoToPolls /> :\r\n            <div>\r\n              У вас нет опросов для дачи оценки\r\n            </div>\r\n          }\r\n        </ListGroup.Item>\r\n      </ListGroup>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ReducersType} from \"../../../../store/store\";\r\n\r\n\r\nconst ProfileContainer = () => {\r\n  const havePolls = useSelector((state: ReducersType) => state.pools.polls.length);\r\n  return(\r\n    <Profile\r\n      havePolls={havePolls}\r\n    />\r\n  )\r\n}\r\n\r\nexport default ProfileContainer;\r\n\r\n","import React from 'react';\r\nimport {ICompetence} from \"../../../../interfaces/User.types\";\r\nimport classes from \"./Appraisal.module.css\";\r\n\r\n\r\nconst Competence = (props: ICompetence) => {\r\n  return(\r\n    <div className={classes.competence}>\r\n      <span className=\"s34 bold\">{props.competence}: </span>\r\n      <span className=\"s22\">{props.result}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Competence;","import React from 'react';\r\nimport {ICompetence} from \"../../../../interfaces/User.types\";\r\nimport Competence from \"./Competence\";\r\nimport classes from \"./Appraisal.module.css\";\r\nimport {Card} from \"react-bootstrap\";\r\n\r\n\r\ninterface IProps {\r\n  comptences: ICompetence[]\r\n}\r\n\r\nconst Appraisal = (props: IProps) => {\r\n  return(\r\n    <div className={classes.appraisal}>\r\n      <div className={classes.competences}>\r\n        {props.comptences.map((comp: ICompetence) => (\r\n          <Competence\r\n            key={comp.id}\r\n            id={comp.id}\r\n            competence={comp.competence}\r\n            result={comp.result}\r\n          />\r\n        ))}\r\n      </div>\r\n      <Card className={`${classes.info} s22`}>\r\n        <Card.Text className={classes.text}>\r\n          Чем ближе параметр компетенции к единице, тем лучше вас оценивают в этой компетенции\r\n        </Card.Text>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Appraisal;","import React, {useEffect} from 'react';\r\nimport Appraisal from \"./Appraisal\";\r\nimport useHttp from \"../../../../assets/hooks/http\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ReducersType} from \"../../../../store/store\";\r\nimport {setCompetenceAC} from \"../../../../store/user-reducer\";\r\n\r\n\r\nconst AppraisalContainer = () => {\r\n  const user_id = useSelector((state: ReducersType) => state.user.user.info.id);\r\n  const competences = useSelector((state: ReducersType) => state.user.user.competences);\r\n  const {request} = useHttp();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    request(\"/api/users/results\", \"POST\", {user_id}).then(res => {\r\n      dispatch(setCompetenceAC(res));\r\n    });\r\n  }, []);\r\n\r\n  return(\r\n    <Appraisal comptences={competences} />\r\n  )\r\n}\r\n\r\nexport default AppraisalContainer;","import React from 'react';\r\nimport {Tab, Tabs} from \"react-bootstrap\";\r\nimport ProfileContainer from \"./profile/Profile.container\";\r\nimport AppraisalContainer from \"./appraisal/Appraisal.container\";\r\n\r\n\r\nconst ProfilePage = () => {\r\n  return(\r\n    <div>\r\n      <Tabs defaultActiveKey=\"profile\">\r\n        <Tab eventKey=\"profile\" title={\"Профиль\"}>\r\n          <ProfileContainer />\r\n        </Tab>\r\n        <Tab eventKey=\"appraisal\" title={\"Оценки\"}>\r\n          <AppraisalContainer />\r\n        </Tab>\r\n      </Tabs>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfilePage;","import React from 'react';\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Main from \"../main/Main\";\r\nimport PollsContainer from \"../polls/Polls.container\";\r\nimport UsersContainer from \"../../admin/users/Users.container\";\r\nimport Registration from \"../../admin/registration/Registr\";\r\nimport PollContainer from \"../polls/poll/Poll.container\";\r\nimport AdminPollsContainer from \"../../admin/polls/Polls.container\";\r\nimport AdminAddPollContainer from \"../../admin/add-poll/AddPoll.container\";\r\nimport AdminAddInterviewerContainer from \"../../admin/add-interviewers/AdminAddInterviewer.container\";\r\nimport ProfilePage from \"../profile/ProfilePage\";\r\n\r\n\r\nconst AdminRouter = () => {\r\n  return(\r\n    <Switch>\r\n      <Route render={() => <Main /> } path='/' exact/>\r\n      <Route render={() => <PollsContainer /> } path='/polls' exact/>\r\n      <Route render={() => <PollContainer />} path={'/poll'} exact />\r\n      <Route render={() => <ProfilePage /> } path='/profile' exact />\r\n      <Route render={() => <Registration /> } path='/admin/registration' exact />\r\n      <Route render={() => <UsersContainer /> } path='/admin/users' exact />\r\n      <Route render={() => <AdminPollsContainer /> } path='/admin/polls' exact />\r\n      <Route render={() => <AdminAddPollContainer /> } path='/admin/add-poll' exact />\r\n      <Route render={() => <AdminAddInterviewerContainer /> } path='/admin/add-interviewer' exact />\r\n      <Redirect to={\"/\"} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default AdminRouter;","import React from 'react';\r\nimport {Form, reduxForm, Field} from \"redux-form\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport classes from \"../Login.module.css\";\r\nimport {minLengthCreator, required} from \"../../../../assets/validators/validators\";\r\nimport {Input} from \"../../../form-controls/FormControls\";\r\n\r\n\r\nconst minLength = minLengthCreator(6);\r\n\r\nconst LoginForm = (props) => {\r\n  return(\r\n      <Form onSubmit={props.handleSubmit}>\r\n        <div className={classes.field}>\r\n          <Field\r\n            name=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"Введите почту\"\r\n            component={Input}\r\n            validate={[required]}\r\n          />\r\n        </div>\r\n        <div className={classes.field}>\r\n          <Field\r\n            name=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"Введите пароль\"\r\n            component={Input}\r\n            type=\"password\"\r\n            validate={[required, minLength]}\r\n          />\r\n        </div>\r\n        <div className={classes.field}>\r\n          <Button variant=\"warning\" type=\"submit\">\r\n            Войти\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({form: \"login\"})(LoginForm);","import React from 'react';\r\nimport LoginForm from \"./LoginForm\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {login, setToken, setUser} from \"../../../../store/user-reducer\";\r\nimport useHttp from \"../../../../assets/hooks/http\";\r\n\r\n\r\nconst LoginFormContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const {request} = useHttp();\r\n  const handlerSubmit = async (form) => {\r\n    try{\r\n      const data = await request('/api/auth/login', \"POST\", {...form});\r\n      dispatch(setToken(data.token));\r\n      dispatch(setUser(data.userInfo));\r\n      localStorage.setItem(\"userInfo\", JSON.stringify({\r\n        userInfo: data.userInfo, token: data.token\r\n      }));\r\n    } catch (e) {\r\n\r\n    }\r\n    // console.log(data);\r\n    // dispatch(login(data.email, data.password));\r\n  }\r\n\r\n  return(\r\n    <LoginForm\r\n      onSubmit={handlerSubmit}\r\n    />\r\n  )\r\n}\r\n\r\nexport default LoginFormContainer;","import React from 'react';\r\nimport {Card, ListGroup} from \"react-bootstrap\";\r\nimport LoginFormContainer from \"./forms/LoginForm.container\";\r\nimport classes from \"./Login.module.css\";\r\n\r\n\r\nconst Login = () => {\r\n  return(\r\n    <Card className={classes.login}>\r\n      <ListGroup>\r\n        <ListGroup.Item className=\"fw-bold s22\">\r\n          Войдите в аккаунт\r\n        </ListGroup.Item>\r\n        <ListGroup.Item>\r\n          <LoginFormContainer />\r\n        </ListGroup.Item>\r\n      </ListGroup>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Main from \"../main/Main\";\r\nimport PollsContainer from \"../polls/Polls.container\";\r\nimport Login from \"../login/Login\";\r\nimport PollContainer from \"../polls/poll/Poll.container\";\r\nimport ProfilePage from \"../profile/ProfilePage\";\r\n\r\n\r\ninterface IProps {\r\n  session: boolean;\r\n}\r\n\r\nconst UserRouter = (props: IProps) => {\r\n  if(props.session){\r\n    return(\r\n      <Switch>\r\n        <Route render={() => <Main /> } path='/' exact/>\r\n        <Route render={() => <PollsContainer /> } path='/polls' exact/>\r\n        <Route render={() => <PollContainer />} path={'/poll'} exact />\r\n        <Route render={() => <ProfilePage /> } path='/profile' exact/>\r\n        <Redirect to={\"/\"} />\r\n      </Switch>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Switch>\r\n      <Route render={() => <Main /> } path='/' exact/>\r\n      <Route render={() => <PollsContainer /> } path='/polls' exact/>\r\n      <Route render={() => <Login /> } path='/login' exact />\r\n      <Redirect to={\"/\"} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default UserRouter;","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {ReducersType} from \"../../../store/store\";\r\nimport UserRouter from \"./UserRouter\";\r\n\r\n\r\nconst UserRouterContainer = () => {\r\n  const session = useSelector((state: ReducersType) => state.user.user.isIn);\r\n  return(\r\n    <UserRouter session={session} />\r\n  )\r\n}\r\n\r\nexport default UserRouterContainer;","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {ReducersType} from \"../../../store/store\";\r\nimport AdminRouter from \"./AdminRouter\";\r\nimport UserRouterContainer from \"./UserRouter.container\";\r\n\r\n\r\nconst Router = () => {\r\n  const isAdmin: boolean = useSelector((state: ReducersType) => state.user.user.info.isAdmin);\r\n  if(isAdmin){\r\n    return <AdminRouter />\r\n  }\r\n\r\n  return <UserRouterContainer />\r\n}\r\n\r\nexport default Router","import React from 'react'\r\nimport classes from \"./Content.module.css\";\r\nimport Router from \"./router/Router\";\r\nimport Preloader from \"../../assets/elements/Preloadre\";\r\n\r\n\r\ninterface IProps {\r\n  // initialized: boolean;\r\n}\r\n\r\nconst Content = (props: IProps) => {\r\n  return(\r\n    <div>\r\n      <main className={classes.content}>\r\n        {/*{props.initialized ? <Router /> : <Preloader />}*/}\r\n        <Router />\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Content;","\r\n\r\nconst initialState = {\r\n  initialized: false\r\n}\r\n\r\ntype TState = typeof initialState;\r\ntype TAppActions = ReturnType<typeof initializedSuccess>;\r\n\r\nconst appReducer = (state: TState = initialState, action: TAppActions) => {\r\n  switch (action.type) {\r\n    case \"INITIALIZED-SUCCESS\": {\r\n      return {...state, initialized: true}\r\n    }\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: \"INITIALIZED-SUCCESS\"} as const);\r\n\r\nexport default appReducer;","import React, {useEffect} from 'react';\r\nimport Content from \"./Contents\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {login} from \"../../store/user-reducer\";\r\nimport {initializedSuccess} from \"../../store/app-reducer\";\r\nimport {ReducersType} from \"../../store/store\";\r\nimport {setPollsAC} from \"../../store/pools-reducer\";\r\nimport useHttp from \"../../assets/hooks/http\";\r\n\r\n\r\nconst ContentContainer = () => {\r\n  const {request} = useHttp();\r\n  const userId = useSelector((state: ReducersType) => state.user.user.info.id);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    if (data && data.token) {\r\n      dispatch(login(data.token, data.userInfo));\r\n      dispatch(initializedSuccess());\r\n    }\r\n    initializedSuccess();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(userId !== 0){\r\n      request('/api/polls/', \"POST\", {userId}).then(res => {\r\n        dispatch(setPollsAC(res));\r\n      });\r\n    }\r\n  }, [userId])\r\n\r\n  return(\r\n    <Content\r\n    />\r\n  )\r\n}\r\n\r\nexport default ContentContainer;","import React from 'react';\nimport './App.css';\nimport Header from \"./components/header/Header\";\nimport Footer from \"./components/footer/Footer\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport ContentContainer from \"./components/content/Contents.container\";\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header />\n        <ContentContainer />\n        <Footer />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport userReducer from \"./user-reducer\";\r\nimport poolsReducer from \"./pools-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nconst reducers = combineReducers({\r\n  form: formReducer,\r\n  user: userReducer,\r\n  pools: poolsReducer,\r\n  app: appReducer\r\n})\r\n\r\nexport type ReducersType = ReturnType<typeof reducers>\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\ndeclare global {\r\n  interface Window {\r\n    store:any;\r\n  }\r\n}\r\n\r\nwindow.store = store\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css'\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registr\":\"Registr_registr__NbSWS\",\"input\":\"Registr_input__MU0H6\",\"button\":\"Registr_button__oxUai\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"competences\":\"Appraisal_competences__37Bto\",\"competence\":\"Appraisal_competence__2eg_A\",\"appraisal\":\"Appraisal_appraisal__22YkB\",\"info\":\"Appraisal_info__3wQUd\",\"text\":\"Appraisal_text__1R78t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__1HP9H\",\"field\":\"Login_field__1sSdH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2g1h4\",\"el\":\"Footer_el__BBHzk\",\"block\":\"Footer_block__3TjAA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"competences\":\"CompetenceMainPage_competences__2dfbo\",\"list\":\"CompetenceMainPage_list__26sG2\",\"list_competences\":\"CompetenceMainPage_list_competences__2j7n6\",\"text\":\"CompetenceMainPage_text__EDDKi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1zGJy\",\"usernav\":\"Navbar_usernav__2iXXq\",\"profile\":\"Navbar_profile__3oOdM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"AddPoll_filter__1mYdz\",\"clearFilter\":\"AddPoll_clearFilter__jzUXd\",\"search\":\"AddPoll_search__rF7s6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Info_profile__1Ewko\",\"block\":\"Info_block__3vfqB\",\"info\":\"Info_info__TMzu3\"};"],"sourceRoot":""}